import * as tslib_1 from "tslib";
import { NgModule, APP_INITIALIZER } from '@angular/core';
import { CommonModule } from '@angular/common';
// import { BrowserModule } from '@angular/platform-browser';
// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
// import { MatSnackBar } from "@angular/material";
import { NAuthGuardService } from './n-authGaurd.service';
import { NDataModelService } from './n-dataModel.service';
// import { NDataSourceService } from './n-dataSource.service';
import { NHttpService } from './n-HTTP.service';
import { NHTTPLoaderService } from './n-HTTPLoader.service';
import { NLocalStorageService } from './n-localStorage.service';
import { NLoginService } from './n-login.service';
import { NLogoutService } from './n-logout.service';
import { NNotificationService } from './n-notification.service';
import { NSnackbarService } from './n-snackbar.service';
import { NPubSubService } from './n-pubSub.service';
import { NSessionStorageService } from './n-sessionStorage.service';
import { NTokenService } from './n-token.service';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';
// import { RouterModule } from '@angular/router';
import { RouterModule } from '@angular/router';
import { SnackComponent } from './snackbar/snack/snack.component';
import { SnackbarComponent } from './snackbar/snackbar/snackbar.component';
// import {SafeHtmlPipe} from './snackbar/pipe/safe-html.pipe';
// export function updateEnvProperties(env) {
//   console.log(env);
//   NSystemService.getInstance().environments = env;
// }
export function startupServiceFactory(startupService) {
    var res = function () {
        // console.log('module before initstorage call');
        return startupService.initStorage();
    };
    return res;
}
var NeutrinosSeedServicesModule = /** @class */ (function () {
    function NeutrinosSeedServicesModule() {
    }
    NeutrinosSeedServicesModule = tslib_1.__decorate([
        NgModule({
            imports: [
                CommonModule,
                HttpClientModule,
                RouterModule
                // NgForageModule.forRoot()
                // BrowserModule
            ],
            providers: [
                {
                    provide: HTTP_INTERCEPTORS,
                    useClass: NHttpService,
                    multi: true
                },
                {
                    // Provider for APP_INITIALIZER
                    provide: APP_INITIALIZER,
                    useFactory: startupServiceFactory,
                    deps: [NLocalStorageService],
                    multi: true
                },
                NAuthGuardService,
                NDataModelService,
                // NDataSourceService,
                NHttpService,
                NHTTPLoaderService,
                NLocalStorageService,
                NLoginService,
                NLogoutService,
                NNotificationService,
                NSnackbarService,
                NPubSubService,
                //     NSystemService,
                NSessionStorageService,
                NTokenService
            ],
            declarations: [
                SnackComponent,
                SnackbarComponent
            ],
            exports: [
                SnackComponent,
                SnackbarComponent
            ]
        })
    ], NeutrinosSeedServicesModule);
    return NeutrinosSeedServicesModule;
}());
export { NeutrinosSeedServicesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV1dHJpbm9zLXNlZWQtc2VydmljZXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyw2REFBNkQ7QUFFN0Qsa0ZBQWtGO0FBQ2xGLG1EQUFtRDtBQUNuRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCwrREFBK0Q7QUFDL0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFBO0FBQ25FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRSxrREFBa0Q7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBVSxNQUFNLGlCQUFpQixDQUFDO0FBR3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMzRSwrREFBK0Q7QUFHL0QsNkNBQTZDO0FBQzdDLHNCQUFzQjtBQUN0QixxREFBcUQ7QUFDckQsSUFBSTtBQUVKLE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxjQUFvQztJQUN4RSxJQUFNLEdBQUcsR0FBRztRQUNWLGlEQUFpRDtRQUNqRCxPQUFPLGNBQWMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUV0QyxDQUFDLENBQUE7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUErQ0Q7SUFBQTtJQUVBLENBQUM7SUFGWSwyQkFBMkI7UUE5Q3ZDLFFBQVEsQ0FBQztZQUNSLE9BQU8sRUFBRTtnQkFDUCxZQUFZO2dCQUNaLGdCQUFnQjtnQkFDaEIsWUFBWTtnQkFDWiwyQkFBMkI7Z0JBQzNCLGdCQUFnQjthQUNqQjtZQUNELFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsaUJBQWlCO29CQUMxQixRQUFRLEVBQUUsWUFBWTtvQkFDdEIsS0FBSyxFQUFFLElBQUk7aUJBQ1o7Z0JBQ0Q7b0JBQ0UsK0JBQStCO29CQUMvQixPQUFPLEVBQUUsZUFBZTtvQkFDeEIsVUFBVSxFQUFFLHFCQUFxQjtvQkFDakMsSUFBSSxFQUFFLENBQUMsb0JBQW9CLENBQUM7b0JBQzVCLEtBQUssRUFBRSxJQUFJO2lCQUNaO2dCQUNELGlCQUFpQjtnQkFDakIsaUJBQWlCO2dCQUNqQixzQkFBc0I7Z0JBQ3RCLFlBQVk7Z0JBQ1osa0JBQWtCO2dCQUNsQixvQkFBb0I7Z0JBQ3BCLGFBQWE7Z0JBQ2IsY0FBYztnQkFDZCxvQkFBb0I7Z0JBQ3BCLGdCQUFnQjtnQkFDaEIsY0FBYztnQkFDZCxzQkFBc0I7Z0JBQ3RCLHNCQUFzQjtnQkFDdEIsYUFBYTthQUNkO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLGNBQWM7Z0JBQ2QsaUJBQWlCO2FBQ2xCO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLGNBQWM7Z0JBQ2QsaUJBQWlCO2FBQ2xCO1NBRUYsQ0FBQztPQUNXLDJCQUEyQixDQUV2QztJQUFELGtDQUFDO0NBQUEsQUFGRCxJQUVDO1NBRlksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIEFQUF9JTklUSUFMSVpFUiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbi8vIGltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuLy8gaW1wb3J0IHsgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyL2FuaW1hdGlvbnMnO1xuLy8gaW1wb3J0IHsgTWF0U25hY2tCYXIgfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWxcIjtcbmltcG9ydCB7IE5BdXRoR3VhcmRTZXJ2aWNlIH0gZnJvbSAnLi9uLWF1dGhHYXVyZC5zZXJ2aWNlJztcbmltcG9ydCB7IE5EYXRhTW9kZWxTZXJ2aWNlIH0gZnJvbSAnLi9uLWRhdGFNb2RlbC5zZXJ2aWNlJztcbi8vIGltcG9ydCB7IE5EYXRhU291cmNlU2VydmljZSB9IGZyb20gJy4vbi1kYXRhU291cmNlLnNlcnZpY2UnO1xuaW1wb3J0IHsgTkh0dHBTZXJ2aWNlIH0gZnJvbSAnLi9uLUhUVFAuc2VydmljZSc7XG5pbXBvcnQgeyBOSFRUUExvYWRlclNlcnZpY2UgfSBmcm9tICcuL24tSFRUUExvYWRlci5zZXJ2aWNlJztcbmltcG9ydCB7IE5Mb2NhbFN0b3JhZ2VTZXJ2aWNlIH0gZnJvbSAnLi9uLWxvY2FsU3RvcmFnZS5zZXJ2aWNlJztcbmltcG9ydCB7IE5Mb2dpblNlcnZpY2UgfSBmcm9tICcuL24tbG9naW4uc2VydmljZSc7XG5pbXBvcnQgeyBOTG9nb3V0U2VydmljZSB9IGZyb20gJy4vbi1sb2dvdXQuc2VydmljZSc7XG5pbXBvcnQgeyBOTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vbi1ub3RpZmljYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBOU25hY2tiYXJTZXJ2aWNlIH0gZnJvbSAnLi9uLXNuYWNrYmFyLnNlcnZpY2UnO1xuaW1wb3J0IHsgTlN5c3RlbVNlcnZpY2UgfSBmcm9tICcuL24tc3lzdGVtLnNlcnZpY2UnO1xuaW1wb3J0IHsgTlB1YlN1YlNlcnZpY2UgfSBmcm9tICcuL24tcHViU3ViLnNlcnZpY2UnO1xuaW1wb3J0IHsgTlNlc3Npb25TdG9yYWdlU2VydmljZSB9IGZyb20gJy4vbi1zZXNzaW9uU3RvcmFnZS5zZXJ2aWNlJ1xuaW1wb3J0IHsgTlRva2VuU2VydmljZSB9IGZyb20gJy4vbi10b2tlbi5zZXJ2aWNlJztcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUsIEhUVFBfSU5URVJDRVBUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuLy8gaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSwgUm91dGVzIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE5nRm9yYWdlTW9kdWxlIH0gZnJvbSAnbmdmb3JhZ2UnO1xuXG5pbXBvcnQgeyBTbmFja0NvbXBvbmVudCB9IGZyb20gJy4vc25hY2tiYXIvc25hY2svc25hY2suY29tcG9uZW50JztcbmltcG9ydCB7IFNuYWNrYmFyQ29tcG9uZW50IH0gZnJvbSAnLi9zbmFja2Jhci9zbmFja2Jhci9zbmFja2Jhci5jb21wb25lbnQnO1xuLy8gaW1wb3J0IHtTYWZlSHRtbFBpcGV9IGZyb20gJy4vc25hY2tiYXIvcGlwZS9zYWZlLWh0bWwucGlwZSc7XG5cblxuLy8gZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUVudlByb3BlcnRpZXMoZW52KSB7XG4vLyAgIGNvbnNvbGUubG9nKGVudik7XG4vLyAgIE5TeXN0ZW1TZXJ2aWNlLmdldEluc3RhbmNlKCkuZW52aXJvbm1lbnRzID0gZW52O1xuLy8gfVxuXG5leHBvcnQgZnVuY3Rpb24gc3RhcnR1cFNlcnZpY2VGYWN0b3J5KHN0YXJ0dXBTZXJ2aWNlOiBOTG9jYWxTdG9yYWdlU2VydmljZSkge1xuICBjb25zdCByZXMgPSAoKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2coJ21vZHVsZSBiZWZvcmUgaW5pdHN0b3JhZ2UgY2FsbCcpO1xuICAgIHJldHVybiBzdGFydHVwU2VydmljZS5pbml0U3RvcmFnZSgpO1xuXG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgSHR0cENsaWVudE1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGVcbiAgICAvLyBOZ0ZvcmFnZU1vZHVsZS5mb3JSb290KClcbiAgICAvLyBCcm93c2VyTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhUVFBfSU5URVJDRVBUT1JTLFxuICAgICAgdXNlQ2xhc3M6IE5IdHRwU2VydmljZSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICAvLyBQcm92aWRlciBmb3IgQVBQX0lOSVRJQUxJWkVSXG4gICAgICBwcm92aWRlOiBBUFBfSU5JVElBTElaRVIsXG4gICAgICB1c2VGYWN0b3J5OiBzdGFydHVwU2VydmljZUZhY3RvcnksXG4gICAgICBkZXBzOiBbTkxvY2FsU3RvcmFnZVNlcnZpY2VdLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIE5BdXRoR3VhcmRTZXJ2aWNlLFxuICAgIE5EYXRhTW9kZWxTZXJ2aWNlLFxuICAgIC8vIE5EYXRhU291cmNlU2VydmljZSxcbiAgICBOSHR0cFNlcnZpY2UsXG4gICAgTkhUVFBMb2FkZXJTZXJ2aWNlLFxuICAgIE5Mb2NhbFN0b3JhZ2VTZXJ2aWNlLFxuICAgIE5Mb2dpblNlcnZpY2UsXG4gICAgTkxvZ291dFNlcnZpY2UsXG4gICAgTk5vdGlmaWNhdGlvblNlcnZpY2UsXG4gICAgTlNuYWNrYmFyU2VydmljZSxcbiAgICBOUHViU3ViU2VydmljZSxcbiAgICAvLyAgICAgTlN5c3RlbVNlcnZpY2UsXG4gICAgTlNlc3Npb25TdG9yYWdlU2VydmljZSxcbiAgICBOVG9rZW5TZXJ2aWNlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFNuYWNrQ29tcG9uZW50LFxuICAgIFNuYWNrYmFyQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBTbmFja0NvbXBvbmVudCxcbiAgICBTbmFja2JhckNvbXBvbmVudFxuICBdXG5cbn0pXG5leHBvcnQgY2xhc3MgTmV1dHJpbm9zU2VlZFNlcnZpY2VzTW9kdWxlIHtcblxufVxuIl19