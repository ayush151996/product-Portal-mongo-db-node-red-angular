import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
// import { NSnackbarService } from './n-snackbar.service';
import { NLogoutService } from './n-logout.service';
import { NPubSubService } from './n-pubSub.service';
// import { NSnackbarService } from './snackbar/service/snackbar.service';
var NHTTPLoaderService = /** @class */ (function () {
    function NHTTPLoaderService(nLogoutService, nPubSubService) {
        this.nLogoutService = nLogoutService;
        this.nPubSubService = nPubSubService;
        this.pendingRequests = 0;
        this.showLoading = false;
        this._isHTTPRequestInProgress = new Subject();
        this._isHTTPRequestInProgress$ = this._isHTTPRequestInProgress.asObservable();
    }
    NHTTPLoaderService.prototype.isHTTPRequestInProgress = function (bool) {
        if (bool) {
            this.pendingRequests++;
            if (!this.showLoading) {
                this._isHTTPRequestInProgress.next(bool);
            }
            this.showLoading = true;
        }
        else {
            this.pendingRequests--;
            if (this.pendingRequests <= 0) {
                if (this.showLoading) {
                    this._isHTTPRequestInProgress.next(bool);
                }
                this.showLoading = false;
            }
        }
    };
    NHTTPLoaderService.prototype.alertError = function (error) {
        if (error.status < 200 || error.status > 500) {
            if (error.status === 0) {
                this.nPubSubService.$pub('openSnackBar', 'Connectivity issue');
            }
            else {
                this.nPubSubService.$pub('openSnackBar', 'Response failure');
            }
        }
        else if (error.status === 401) {
            this.nLogoutService.logout();
            if (error.error) {
                this.nPubSubService.$pub('openSnackBar', error.error);
            }
            else {
                this.nPubSubService.$pub('openSnackBar', error);
            }
        }
        else if (error.error) {
            if (error.error instanceof Object) {
                this.nPubSubService.$pub('openSnackBar', error.error.message);
            }
            else {
                this.nPubSubService.$pub('openSnackBar', error.error);
            }
        }
        else {
            this.nPubSubService.$pub('openSnackBar', 'Response failure');
        }
    };
    NHTTPLoaderService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__metadata("design:paramtypes", [NLogoutService, NPubSubService])
    ], NHTTPLoaderService);
    return NHTTPLoaderService;
}());
export { NHTTPLoaderService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1IVFRQTG9hZGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZXV0cmlub3Mtc2VlZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvbi1IVFRQTG9hZGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBZ0IsTUFBTSxNQUFNLENBQUM7QUFDN0MsMkRBQTJEO0FBQzNELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVwRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsMEVBQTBFO0FBRzFFO0lBTUUsNEJBQW9CLGNBQThCLEVBQVUsY0FBOEI7UUFBdEUsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQVUsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBTG5GLG9CQUFlLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLGdCQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ25CLDZCQUF3QixHQUFHLElBQUksT0FBTyxFQUFXLENBQUM7UUFDMUQsOEJBQXlCLEdBQUcsSUFBSSxDQUFDLHdCQUF3QixDQUFDLFlBQVksRUFBRSxDQUFDO0lBSXpFLENBQUM7SUFFRCxvREFBdUIsR0FBdkIsVUFBd0IsSUFBSTtRQUMxQixJQUFJLElBQUksRUFBRTtZQUNSLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDckIsSUFBSSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUMxQztZQUNELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO2FBQU07WUFDTCxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDdkIsSUFBSSxJQUFJLENBQUMsZUFBZSxJQUFJLENBQUMsRUFBRTtnQkFDN0IsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO29CQUNwQixJQUFJLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUMxQztnQkFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQzthQUMxQjtTQUNGO0lBQ0gsQ0FBQztJQUVELHVDQUFVLEdBQVYsVUFBVyxLQUFLO1FBQ2QsSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUM1QyxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN0QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsb0JBQW9CLENBQUMsQ0FBQzthQUNoRTtpQkFBTTtnQkFDTCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsa0JBQWtCLENBQUMsQ0FBQTthQUM3RDtTQUNGO2FBQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRTtZQUMvQixJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzdCLElBQUksS0FBSyxDQUFDLEtBQUssRUFBRTtnQkFDZixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFBO2FBQ3REO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUMsQ0FBQTthQUNoRDtTQUNGO2FBQU0sSUFBSSxLQUFLLENBQUMsS0FBSyxFQUFFO1lBQ3RCLElBQUksS0FBSyxDQUFDLEtBQUssWUFBWSxNQUFNLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO2FBQzlEO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUE7YUFDdEQ7U0FDRjthQUFNO1lBQ0wsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUE7U0FDN0Q7SUFDSCxDQUFDO0lBbkRVLGtCQUFrQjtRQUQ5QixVQUFVLEVBQUU7aURBT3lCLGNBQWMsRUFBMEIsY0FBYztPQU4vRSxrQkFBa0IsQ0FxRDlCO0lBQUQseUJBQUM7Q0FBQSxBQXJERCxJQXFEQztTQXJEWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0ICwgIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbi8vIGltcG9ydCB7IE5TbmFja2JhclNlcnZpY2UgfSBmcm9tICcuL24tc25hY2tiYXIuc2VydmljZSc7XG5pbXBvcnQgeyBOTG9nb3V0U2VydmljZSB9IGZyb20gJy4vbi1sb2dvdXQuc2VydmljZSc7XG5pbXBvcnQgeyBOU3lzdGVtU2VydmljZSB9IGZyb20gJy4vbi1zeXN0ZW0uc2VydmljZSc7XG5pbXBvcnQgeyBOUHViU3ViU2VydmljZSB9IGZyb20gJy4vbi1wdWJTdWIuc2VydmljZSc7XG4vLyBpbXBvcnQgeyBOU25hY2tiYXJTZXJ2aWNlIH0gZnJvbSAnLi9zbmFja2Jhci9zZXJ2aWNlL3NuYWNrYmFyLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTkhUVFBMb2FkZXJTZXJ2aWNlIHtcbiAgcHVibGljIHBlbmRpbmdSZXF1ZXN0cyA9IDA7XG4gIHB1YmxpYyBzaG93TG9hZGluZyA9IGZhbHNlO1xuICBwcml2YXRlIF9pc0hUVFBSZXF1ZXN0SW5Qcm9ncmVzcyA9IG5ldyBTdWJqZWN0PGJvb2xlYW4+KCk7XG4gIF9pc0hUVFBSZXF1ZXN0SW5Qcm9ncmVzcyQgPSB0aGlzLl9pc0hUVFBSZXF1ZXN0SW5Qcm9ncmVzcy5hc09ic2VydmFibGUoKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5Mb2dvdXRTZXJ2aWNlOiBOTG9nb3V0U2VydmljZSwgcHJpdmF0ZSBuUHViU3ViU2VydmljZTogTlB1YlN1YlNlcnZpY2UpIHtcblxuICB9XG5cbiAgaXNIVFRQUmVxdWVzdEluUHJvZ3Jlc3MoYm9vbCkge1xuICAgIGlmIChib29sKSB7XG4gICAgICB0aGlzLnBlbmRpbmdSZXF1ZXN0cysrO1xuICAgICAgaWYgKCF0aGlzLnNob3dMb2FkaW5nKSB7XG4gICAgICAgIHRoaXMuX2lzSFRUUFJlcXVlc3RJblByb2dyZXNzLm5leHQoYm9vbCk7XG4gICAgICB9XG4gICAgICB0aGlzLnNob3dMb2FkaW5nID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wZW5kaW5nUmVxdWVzdHMtLTtcbiAgICAgIGlmICh0aGlzLnBlbmRpbmdSZXF1ZXN0cyA8PSAwKSB7XG4gICAgICAgIGlmICh0aGlzLnNob3dMb2FkaW5nKSB7XG4gICAgICAgICAgdGhpcy5faXNIVFRQUmVxdWVzdEluUHJvZ3Jlc3MubmV4dChib29sKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgYWxlcnRFcnJvcihlcnJvcikge1xuICAgIGlmIChlcnJvci5zdGF0dXMgPCAyMDAgfHwgZXJyb3Iuc3RhdHVzID4gNTAwKSB7XG4gICAgICBpZiAoZXJyb3Iuc3RhdHVzID09PSAwKSB7XG4gICAgICAgIHRoaXMublB1YlN1YlNlcnZpY2UuJHB1Yignb3BlblNuYWNrQmFyJywgJ0Nvbm5lY3Rpdml0eSBpc3N1ZScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5uUHViU3ViU2VydmljZS4kcHViKCdvcGVuU25hY2tCYXInLCAnUmVzcG9uc2UgZmFpbHVyZScpXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChlcnJvci5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgdGhpcy5uTG9nb3V0U2VydmljZS5sb2dvdXQoKTtcbiAgICAgIGlmIChlcnJvci5lcnJvcikge1xuICAgICAgICB0aGlzLm5QdWJTdWJTZXJ2aWNlLiRwdWIoJ29wZW5TbmFja0JhcicsIGVycm9yLmVycm9yKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5uUHViU3ViU2VydmljZS4kcHViKCdvcGVuU25hY2tCYXInLCBlcnJvcilcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGVycm9yLmVycm9yKSB7XG4gICAgICBpZiAoZXJyb3IuZXJyb3IgaW5zdGFuY2VvZiBPYmplY3QpIHtcbiAgICAgICAgdGhpcy5uUHViU3ViU2VydmljZS4kcHViKCdvcGVuU25hY2tCYXInLCBlcnJvci5lcnJvci5tZXNzYWdlKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5uUHViU3ViU2VydmljZS4kcHViKCdvcGVuU25hY2tCYXInLCBlcnJvci5lcnJvcilcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5uUHViU3ViU2VydmljZS4kcHViKCdvcGVuU25hY2tCYXInLCAnUmVzcG9uc2UgZmFpbHVyZScpXG4gICAgfVxuICB9XG5cbn1cblxuXG4iXX0=