import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
var NSessionStorageService = /** @class */ (function () {
    function NSessionStorageService() {
        NSessionStorageService_1.sessionStorageCache = sessionStorage;
    }
    NSessionStorageService_1 = NSessionStorageService;
    NSessionStorageService.prototype.getSessionStorage = function () {
        return NSessionStorageService_1.sessionStorageCache;
    };
    NSessionStorageService.prototype.setValue = function (key, value) {
        NSessionStorageService_1.sessionStorageCache[key] = value;
        sessionStorage.setItem(key, value);
    };
    NSessionStorageService.prototype.getValue = function (key) {
        if (!NSessionStorageService_1.sessionStorageCache[key]) {
            return null;
        }
        try {
            var obj = NSessionStorageService_1.sessionStorageCache[key];
            return JSON.parse(obj);
        }
        catch (error) {
            return NSessionStorageService_1.sessionStorageCache[key];
        }
    };
    NSessionStorageService.prototype.remove = function (key) {
        if (NSessionStorageService_1.sessionStorageCache.hasOwnProperty(key)) {
            delete NSessionStorageService_1.sessionStorageCache[key];
            sessionStorage.removeItem(key);
        }
    };
    NSessionStorageService.prototype.clearSessionStorage = function () {
        NSessionStorageService_1.sessionStorageCache = {};
        sessionStorage.clear();
    };
    var NSessionStorageService_1;
    NSessionStorageService.sessionStorageCache = {};
    NSessionStorageService = NSessionStorageService_1 = tslib_1.__decorate([
        Injectable(),
        tslib_1.__metadata("design:paramtypes", [])
    ], NSessionStorageService);
    return NSessionStorageService;
}());
export { NSessionStorageService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zZXNzaW9uU3RvcmFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzL24tc2Vzc2lvblN0b3JhZ2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQztJQUVFO1FBQ0Usd0JBQXNCLENBQUMsbUJBQW1CLEdBQUcsY0FBYyxDQUFDO0lBQzlELENBQUM7K0JBSlUsc0JBQXNCO0lBTWpDLGtEQUFpQixHQUFqQjtRQUNFLE9BQU8sd0JBQXNCLENBQUMsbUJBQW1CLENBQUM7SUFDcEQsQ0FBQztJQUVELHlDQUFRLEdBQVIsVUFBUyxHQUFHLEVBQUUsS0FBSztRQUNqQix3QkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDeEQsY0FBYyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELHlDQUFRLEdBQVIsVUFBUyxHQUFHO1FBQ1YsSUFBSSxDQUFDLHdCQUFzQixDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3BELE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFJO1lBQ0YsSUFBTSxHQUFHLEdBQUcsd0JBQXNCLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDNUQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3hCO1FBQUMsT0FBTyxLQUFLLEVBQUU7WUFDZCxPQUFPLHdCQUFzQixDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0gsQ0FBQztJQUVELHVDQUFNLEdBQU4sVUFBTyxHQUFHO1FBQ1IsSUFBSSx3QkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDbEUsT0FBTyx3QkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN2RCxjQUFjLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQztJQUVELG9EQUFtQixHQUFuQjtRQUNFLHdCQUFzQixDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztRQUNoRCxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQzs7SUFwQ00sMENBQW1CLEdBQVEsRUFBRSxDQUFDO0lBRDFCLHNCQUFzQjtRQURsQyxVQUFVLEVBQUU7O09BQ0Esc0JBQXNCLENBdUNsQztJQUFELDZCQUFDO0NBQUEsQUF2Q0QsSUF1Q0M7U0F2Q1ksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTlNlc3Npb25TdG9yYWdlU2VydmljZSB7XG4gIHN0YXRpYyBzZXNzaW9uU3RvcmFnZUNhY2hlOiBhbnkgPSB7fTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlID0gc2Vzc2lvblN0b3JhZ2U7XG4gIH1cblxuICBnZXRTZXNzaW9uU3RvcmFnZSgpIHtcbiAgICByZXR1cm4gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlO1xuICB9XG5cbiAgc2V0VmFsdWUoa2V5LCB2YWx1ZSkge1xuICAgIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZVtrZXldID0gdmFsdWU7XG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcbiAgfVxuXG4gIGdldFZhbHVlKGtleSkge1xuICAgIGlmICghTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV0pIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgY29uc3Qgb2JqID0gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV07XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShvYmopO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlKGtleSkge1xuICAgIGlmIChOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgZGVsZXRlIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZVtrZXldO1xuICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgIH1cbiAgfVxuXG4gIGNsZWFyU2Vzc2lvblN0b3JhZ2UoKSB7XG4gICAgTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlID0ge307XG4gICAgc2Vzc2lvblN0b3JhZ2UuY2xlYXIoKTtcbiAgfVxuXG59XG4iXX0=