import * as tslib_1 from "tslib";
import { NgModule, APP_INITIALIZER } from '@angular/core';
import { CommonModule } from '@angular/common';
// import { BrowserModule } from '@angular/platform-browser';
// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
// import { MatSnackBar } from "@angular/material";
import { NAuthGuardService } from './n-authGaurd.service';
import { NDataModelService } from './n-dataModel.service';
// import { NDataSourceService } from './n-dataSource.service';
import { NHttpService } from './n-HTTP.service';
import { NHTTPLoaderService } from './n-HTTPLoader.service';
import { NLocalStorageService } from './n-localStorage.service';
import { NLoginService } from './n-login.service';
import { NLogoutService } from './n-logout.service';
import { NNotificationService } from './n-notification.service';
import { NSnackbarService } from './n-snackbar.service';
import { NPubSubService } from './n-pubSub.service';
import { NSessionStorageService } from './n-sessionStorage.service';
import { NTokenService } from './n-token.service';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';
// import { RouterModule } from '@angular/router';
import { RouterModule } from '@angular/router';
import { SnackComponent } from './snackbar/snack/snack.component';
import { SnackbarComponent } from './snackbar/snackbar/snackbar.component';
// import {SafeHtmlPipe} from './snackbar/pipe/safe-html.pipe';
// export function updateEnvProperties(env) {
//   console.log(env);
//   NSystemService.getInstance().environments = env;
// }
export function startupServiceFactory(startupService) {
    const res = () => {
        // console.log('module before initstorage call');
        return startupService.initStorage();
    };
    return res;
}
let NeutrinosSeedServicesModule = class NeutrinosSeedServicesModule {
};
NeutrinosSeedServicesModule = tslib_1.__decorate([
    NgModule({
        imports: [
            CommonModule,
            HttpClientModule,
            RouterModule
            // NgForageModule.forRoot()
            // BrowserModule
        ],
        providers: [
            {
                provide: HTTP_INTERCEPTORS,
                useClass: NHttpService,
                multi: true
            },
            {
                // Provider for APP_INITIALIZER
                provide: APP_INITIALIZER,
                useFactory: startupServiceFactory,
                deps: [NLocalStorageService],
                multi: true
            },
            NAuthGuardService,
            NDataModelService,
            // NDataSourceService,
            NHttpService,
            NHTTPLoaderService,
            NLocalStorageService,
            NLoginService,
            NLogoutService,
            NNotificationService,
            NSnackbarService,
            NPubSubService,
            //     NSystemService,
            NSessionStorageService,
            NTokenService
        ],
        declarations: [
            SnackComponent,
            SnackbarComponent
        ],
        exports: [
            SnackComponent,
            SnackbarComponent
        ]
    })
], NeutrinosSeedServicesModule);
export { NeutrinosSeedServicesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV1dHJpbm9zLXNlZWQtc2VydmljZXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyw2REFBNkQ7QUFFN0Qsa0ZBQWtGO0FBQ2xGLG1EQUFtRDtBQUNuRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCwrREFBK0Q7QUFDL0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFBO0FBQ25FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRSxrREFBa0Q7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBVSxNQUFNLGlCQUFpQixDQUFDO0FBR3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMzRSwrREFBK0Q7QUFHL0QsNkNBQTZDO0FBQzdDLHNCQUFzQjtBQUN0QixxREFBcUQ7QUFDckQsSUFBSTtBQUVKLE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxjQUFvQztJQUN4RSxNQUFNLEdBQUcsR0FBRyxHQUFHLEVBQUU7UUFDZixpREFBaUQ7UUFDakQsT0FBTyxjQUFjLENBQUMsV0FBVyxFQUFFLENBQUM7SUFFdEMsQ0FBQyxDQUFBO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBK0NELElBQWEsMkJBQTJCLEdBQXhDLE1BQWEsMkJBQTJCO0NBRXZDLENBQUE7QUFGWSwyQkFBMkI7SUE5Q3ZDLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRTtZQUNQLFlBQVk7WUFDWixnQkFBZ0I7WUFDaEIsWUFBWTtZQUNaLDJCQUEyQjtZQUMzQixnQkFBZ0I7U0FDakI7UUFDRCxTQUFTLEVBQUU7WUFDVDtnQkFDRSxPQUFPLEVBQUUsaUJBQWlCO2dCQUMxQixRQUFRLEVBQUUsWUFBWTtnQkFDdEIsS0FBSyxFQUFFLElBQUk7YUFDWjtZQUNEO2dCQUNFLCtCQUErQjtnQkFDL0IsT0FBTyxFQUFFLGVBQWU7Z0JBQ3hCLFVBQVUsRUFBRSxxQkFBcUI7Z0JBQ2pDLElBQUksRUFBRSxDQUFDLG9CQUFvQixDQUFDO2dCQUM1QixLQUFLLEVBQUUsSUFBSTthQUNaO1lBQ0QsaUJBQWlCO1lBQ2pCLGlCQUFpQjtZQUNqQixzQkFBc0I7WUFDdEIsWUFBWTtZQUNaLGtCQUFrQjtZQUNsQixvQkFBb0I7WUFDcEIsYUFBYTtZQUNiLGNBQWM7WUFDZCxvQkFBb0I7WUFDcEIsZ0JBQWdCO1lBQ2hCLGNBQWM7WUFDZCxzQkFBc0I7WUFDdEIsc0JBQXNCO1lBQ3RCLGFBQWE7U0FDZDtRQUNELFlBQVksRUFBRTtZQUNaLGNBQWM7WUFDZCxpQkFBaUI7U0FDbEI7UUFDRCxPQUFPLEVBQUU7WUFDUCxjQUFjO1lBQ2QsaUJBQWlCO1NBQ2xCO0tBRUYsQ0FBQztHQUNXLDJCQUEyQixDQUV2QztTQUZZLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBBUFBfSU5JVElBTElaRVIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG4vLyBpbXBvcnQgeyBCcm93c2VyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbi8vIGltcG9ydCB7IEJyb3dzZXJBbmltYXRpb25zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zJztcbi8vIGltcG9ydCB7IE1hdFNuYWNrQmFyIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsXCI7XG5pbXBvcnQgeyBOQXV0aEd1YXJkU2VydmljZSB9IGZyb20gJy4vbi1hdXRoR2F1cmQuc2VydmljZSc7XG5pbXBvcnQgeyBORGF0YU1vZGVsU2VydmljZSB9IGZyb20gJy4vbi1kYXRhTW9kZWwuc2VydmljZSc7XG4vLyBpbXBvcnQgeyBORGF0YVNvdXJjZVNlcnZpY2UgfSBmcm9tICcuL24tZGF0YVNvdXJjZS5zZXJ2aWNlJztcbmltcG9ydCB7IE5IdHRwU2VydmljZSB9IGZyb20gJy4vbi1IVFRQLnNlcnZpY2UnO1xuaW1wb3J0IHsgTkhUVFBMb2FkZXJTZXJ2aWNlIH0gZnJvbSAnLi9uLUhUVFBMb2FkZXIuc2VydmljZSc7XG5pbXBvcnQgeyBOTG9jYWxTdG9yYWdlU2VydmljZSB9IGZyb20gJy4vbi1sb2NhbFN0b3JhZ2Uuc2VydmljZSc7XG5pbXBvcnQgeyBOTG9naW5TZXJ2aWNlIH0gZnJvbSAnLi9uLWxvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgTkxvZ291dFNlcnZpY2UgfSBmcm9tICcuL24tbG9nb3V0LnNlcnZpY2UnO1xuaW1wb3J0IHsgTk5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuL24tbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgTlNuYWNrYmFyU2VydmljZSB9IGZyb20gJy4vbi1zbmFja2Jhci5zZXJ2aWNlJztcbmltcG9ydCB7IE5TeXN0ZW1TZXJ2aWNlIH0gZnJvbSAnLi9uLXN5c3RlbS5zZXJ2aWNlJztcbmltcG9ydCB7IE5QdWJTdWJTZXJ2aWNlIH0gZnJvbSAnLi9uLXB1YlN1Yi5zZXJ2aWNlJztcbmltcG9ydCB7IE5TZXNzaW9uU3RvcmFnZVNlcnZpY2UgfSBmcm9tICcuL24tc2Vzc2lvblN0b3JhZ2Uuc2VydmljZSdcbmltcG9ydCB7IE5Ub2tlblNlcnZpY2UgfSBmcm9tICcuL24tdG9rZW4uc2VydmljZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlLCBIVFRQX0lOVEVSQ0VQVE9SUyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbi8vIGltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUsIFJvdXRlcyB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBOZ0ZvcmFnZU1vZHVsZSB9IGZyb20gJ25nZm9yYWdlJztcblxuaW1wb3J0IHsgU25hY2tDb21wb25lbnQgfSBmcm9tICcuL3NuYWNrYmFyL3NuYWNrL3NuYWNrLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTbmFja2JhckNvbXBvbmVudCB9IGZyb20gJy4vc25hY2tiYXIvc25hY2tiYXIvc25hY2tiYXIuY29tcG9uZW50Jztcbi8vIGltcG9ydCB7U2FmZUh0bWxQaXBlfSBmcm9tICcuL3NuYWNrYmFyL3BpcGUvc2FmZS1odG1sLnBpcGUnO1xuXG5cbi8vIGV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFbnZQcm9wZXJ0aWVzKGVudikge1xuLy8gICBjb25zb2xlLmxvZyhlbnYpO1xuLy8gICBOU3lzdGVtU2VydmljZS5nZXRJbnN0YW5jZSgpLmVudmlyb25tZW50cyA9IGVudjtcbi8vIH1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0dXBTZXJ2aWNlRmFjdG9yeShzdGFydHVwU2VydmljZTogTkxvY2FsU3RvcmFnZVNlcnZpY2UpIHtcbiAgY29uc3QgcmVzID0gKCkgPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKCdtb2R1bGUgYmVmb3JlIGluaXRzdG9yYWdlIGNhbGwnKTtcbiAgICByZXR1cm4gc3RhcnR1cFNlcnZpY2UuaW5pdFN0b3JhZ2UoKTtcblxuICB9XG4gIHJldHVybiByZXM7XG59XG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEh0dHBDbGllbnRNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlXG4gICAgLy8gTmdGb3JhZ2VNb2R1bGUuZm9yUm9vdCgpXG4gICAgLy8gQnJvd3Nlck1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIVFRQX0lOVEVSQ0VQVE9SUyxcbiAgICAgIHVzZUNsYXNzOiBOSHR0cFNlcnZpY2UsXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgLy8gUHJvdmlkZXIgZm9yIEFQUF9JTklUSUFMSVpFUlxuICAgICAgcHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLFxuICAgICAgdXNlRmFjdG9yeTogc3RhcnR1cFNlcnZpY2VGYWN0b3J5LFxuICAgICAgZGVwczogW05Mb2NhbFN0b3JhZ2VTZXJ2aWNlXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICBOQXV0aEd1YXJkU2VydmljZSxcbiAgICBORGF0YU1vZGVsU2VydmljZSxcbiAgICAvLyBORGF0YVNvdXJjZVNlcnZpY2UsXG4gICAgTkh0dHBTZXJ2aWNlLFxuICAgIE5IVFRQTG9hZGVyU2VydmljZSxcbiAgICBOTG9jYWxTdG9yYWdlU2VydmljZSxcbiAgICBOTG9naW5TZXJ2aWNlLFxuICAgIE5Mb2dvdXRTZXJ2aWNlLFxuICAgIE5Ob3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIE5TbmFja2JhclNlcnZpY2UsXG4gICAgTlB1YlN1YlNlcnZpY2UsXG4gICAgLy8gICAgIE5TeXN0ZW1TZXJ2aWNlLFxuICAgIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2UsXG4gICAgTlRva2VuU2VydmljZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTbmFja0NvbXBvbmVudCxcbiAgICBTbmFja2JhckNvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgU25hY2tDb21wb25lbnQsXG4gICAgU25hY2tiYXJDb21wb25lbnRcbiAgXVxuXG59KVxuZXhwb3J0IGNsYXNzIE5ldXRyaW5vc1NlZWRTZXJ2aWNlc01vZHVsZSB7XG5cbn1cbiJdfQ==