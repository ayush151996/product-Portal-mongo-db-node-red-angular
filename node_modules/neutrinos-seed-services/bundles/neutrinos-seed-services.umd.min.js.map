{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-system.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-sessionStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-util.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-localStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-token.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-pubSub.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-logout.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTPLoader.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-notification.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-login.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-authGaurd.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-dataModel.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTP.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-snackbar.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snack/snack.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snackbar/snackbar.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/neutrinos-seed-services.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","NSystemService","this","_deviceType","checkDevice","getInstance","instance","prototype","window","getVal","envProperties","properties","isAndroid","isIOS","getAndroidVersion","getAuthUrl","baseUrl","tenantName","getTenantUrl","getAppUrl","appName","getProxyUrl","getDataModelUrl","appDataSource","getFileIOUrl","getPlatformDetails","type","pDetails","platform","platform.os","family","platformVersion","version","assign","browser","platform.name","browserVersion","platform.version","model","manufacturer","isVirtual","NSessionStorageService","NSessionStorageService_1","sessionStorageCache","sessionStorage","getSessionStorage","setValue","value","setItem","getValue","obj","JSON","parse","error","remove","hasOwnProperty","removeItem","clearSessionStorage","clear","Injectable","NUtility","generateUUID","__s4","Math","floor","random","toString","substring","NLocalStorageService","ngfConfig","ngf","ngfCache","storageCache","initStorage","_this","Promise","resolve","reject","initNgForage","iterate","iteratonNumber","then","result","checkDeviceId","catch","getStorage","console","log","fulfilled","pluginCheck","nativeStorageI","getItemNs","getItem","setItemNs","removeItemNs","clearNs","configure","name","driver","Driver","WEB_SQL","promiseReflect","promise","resolved","v","status","e","clearLocalStorage","_deviceUUID","uniqueDeviceID","get","uuid","NgForageConfig","NgForage","NgForageCache","NTokenService","nLocalStorageService","nSessionStorage","updateTokens","tokensObj","isRemember","userObj","decodeToken","stringify","updateSessionStorage","urlBase64Decode","str","output","replace","b64DecodeUnicode","b64decode","String","Error","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","decodeURIComponent","Array","map","call","charCodeAt","slice","join","token","parts","split","decoded","getTokenExpirationDate","date","Date","setUTCSeconds","exp","isTokenExpired","offsetSeconds","valueOf","NPubSubService","events","$sub","event","callback","complete","undefined","Subject","asObservable","subscribe","$pub","eventObject","next","NLogoutService","logout","NHTTPLoaderService","nLogoutService","nPubSubService","pendingRequests","showLoading","_isHTTPRequestInProgress","_isHTTPRequestInProgress$","isHTTPRequestInProgress","bool","alertError","message","NNotificationService","localStorageService","pubSubService","http","bHttpLoader","systemService","possiblePushTypes","firebaseSenderId","isNotificationEnabled","deviceType","loginSubscribe","enableNotification","ngOnInit","pushType","getPushType","document","addEventListener","checkPermission","res","initializeNotifications","initialiseWebPush","__this","messaging","firebase.messaging","Notification","requestPermission","getToken","sendRegDetails","err","onMessage","payload","notificationObj","options","body","icon","title","onclick","focus","APNSPushNotification","hasPermission","data","isEnabled","PushNotification","push","init","android","senderID","ios","alert","badge","sound","on","registrationId","plugins","notification","local","schedule","text","at","getTime","url","post","fbregid","currPushType","includes","toUpperCase","ngOnDestroy","unSubscribe","HttpClient","NLoginService","notificationService","nTokenService","loginCompleted","EventEmitter","login","userName","password","appProperties","loginUrl","details","username","platformDetails","pipe","isLoggedIn","tslib_1.__decorate","Output","NAuthGuardService","nLoginService","router","canActivate","navigate","Router","NDataModelService","invalidDataModelName","invalidDataModelId","invalidDataModelObj","dataModelName","filter","keys","sort","pagenumber","pagesize","modelNameUrl","getDataSourceURL","checkIfValid","queryString","toQueryString","concat","index","catchError","throwError","put","dataModelObj","delete","update","updateObject","patch","getById","dataModelId","deleteById","updateById","dmObj","dmDs","dsDm","NHttpService","nHTTPLoader","inj","timeout","isRefreshingToken","tokenSubject","BehaviorSubject","intercept","req","requestInterceptor","handle","requestOptions","onCatch","finalize","onFinally","updateToken","appAuthenticationStrategy","take","switchMap","refreshToken","newToken","onCatchError","refreshUrl","userKey","headers","HttpHeaders","clone","getFullUrl","addDefaultHeaders","has","set","basicAuthUser","basicAuthPassword","warn","btoa","responseInterceptor","HttpErrorResponse","onSubscribeError","Injector","NSnackbarService","snackService","snackBarListner","msg","openSnackBar","add","action","id","onClick","snack","onAdd","onRemove","SnackComponent","Input","Component","selector","template","SnackbarComponent","snackbarService","max","onClear","snacks","setTimeout","timeoutObj","that_1","fcn_1","Function","emit","find","clearTimeout","calcTextColor","background","rgb","hex","m","g","b","exec","parseInt","hexToRgb","color","pow","startupServiceFactory","startupService","NeutrinosSeedServicesModule","NgModule","imports","CommonModule","HttpClientModule","RouterModule","providers","provide","HTTP_INTERCEPTORS","useClass","multi","APP_INITIALIZER","useFactory","deps","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// import { environment } from '../../environments/environment';\nimport { NUtility } from './n-util.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { Injectable } from '@angular/core';\nimport * as platform from 'platform';\n\n// @dynamic\nexport class NSystemService {\n  private static instance: NSystemService;\n\n  private _deviceType: string;\n  // private _deviceUUID;\n  uuid;\n  properties;\n  static envProperties;\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new NSystemService();\n    }\n    return this.instance;\n  }\n\n  private constructor() {\n    this._deviceType = this.checkDevice();\n  }\n\n  /**\n   * Seter and getter for the environments\n   */\n\n  // set environments(properties) {\n  //   console.log(properties);\n  //   NSystemService.envProperties = properties;\n  //   this.properties = this.getVal('properties');\n  // }\n\n  // get environments() {\n  //   return NSystemService.envProperties;\n  // }\n\n  /**\n   * Returna 'mobile' or 'browser' based on the platform\n   */\n  checkDevice(): string {\n    if (window['device'] && (window['device']['platform'] != 'browser' || window['device']['platform'] != 'Browser')) {\n      return 'mobile';\n    } else if (window['device'] && (window['device']['platform'] == 'browser' || window['device']['platform'] == 'Browser')) {\n      return 'cordova_browser';\n    } else {\n      return 'browser';\n    }\n  }\n\n\n  public get deviceType() {\n    return this._deviceType;\n  }\n\n\n\n  public getVal(key) {\n    if (!NSystemService.envProperties) {\n      NSystemService.envProperties = window['neutrinos']['environments'];\n      this.properties = NSystemService.envProperties.properties;\n    }\n\n    if (key == 'properties') {\n      if (NSystemService.envProperties) {\n        return NSystemService.envProperties.properties;\n      } else {\n        return undefined;\n      }\n    } else {\n      if (NSystemService.envProperties && NSystemService.envProperties.properties) {\n        return NSystemService.envProperties.properties[key];\n      } else {\n        return undefined;\n      }\n\n    }\n\n  }\n\n  public isAndroid() {\n    if (window['device'] && window['device']['platform'] == 'Android') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public isIOS() {\n    if (window['device'] && window['device']['platform'] == 'iOS') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public getAndroidVersion() {\n    if (this.isAndroid()) {\n      return window['device']['version'];\n    } else {\n      return '';\n    }\n  }\n\n  public getAuthUrl() {\n    // this.properties = this.getVal('properties');\n    return this.properties.baseUrl + this.properties.tenantName + '/auth/';\n  }\n  public getTenantUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/';\n  }\n\n  public getAppUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/' + this.properties.appName + '/';\n  }\n\n  public getProxyUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/';\n  }\n\n  public getDataModelUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/datamodel/' + this.properties.appDataSource + '/' + this.properties.appName + '/';\n  }\n\n  public getFileIOUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/fileio/' +\n      this.properties.appDataSource + '/' + this.properties.appName + '/';\n  }\n\n  public getPlatformDetails(type) {\n    const pDetails = {\n      platform: platform.os.family,\n      platformVersion: platform.os.version,\n    };\n    if (type === 'browser') {\n      return Object.assign(pDetails, {\n        type: 'browser',\n        browser: platform.name,\n        browserVersion: platform.version,\n      });\n    } else if (type === 'mobile' || type === 'cordova_browser') {\n      return Object.assign(pDetails, {\n        type: 'mobile',\n        model: window['device'].model,\n        manufacturer: window['device'].manufacturer,\n        isVirtual: window['device'].isVirtual\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NSessionStorageService {\n  static sessionStorageCache: any = {};\n  constructor() {\n    NSessionStorageService.sessionStorageCache = sessionStorage;\n  }\n\n  getSessionStorage() {\n    return NSessionStorageService.sessionStorageCache;\n  }\n\n  setValue(key, value) {\n    NSessionStorageService.sessionStorageCache[key] = value;\n    sessionStorage.setItem(key, value);\n  }\n\n  getValue(key) {\n    if (!NSessionStorageService.sessionStorageCache[key]) {\n      return null;\n    }\n    try {\n      const obj = NSessionStorageService.sessionStorageCache[key];\n      return JSON.parse(obj);\n    } catch (error) {\n      return NSessionStorageService.sessionStorageCache[key];\n    }\n  }\n\n  remove(key) {\n    if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {\n      delete NSessionStorageService.sessionStorageCache[key];\n      sessionStorage.removeItem(key);\n    }\n  }\n\n  clearSessionStorage() {\n    NSessionStorageService.sessionStorageCache = {};\n    sessionStorage.clear();\n  }\n\n}\n","export class NUtility {\n  \n    constructor() { }\n  \n    generateUUID() {\n      return this.__s4() + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + this.__s4() + this.__s4();\n    }\n  \n    __s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n  }","import { NSystemService } from './n-system.service';\nimport { Injectable } from '@angular/core';\nimport * as localforage from 'localforage';\nimport {NgForage, NgForageCache, NgForageConfig, Driver} from 'ngforage';\nimport { NUtility } from './n-util.service';\n\n@Injectable()\nexport class NLocalStorageService {\n\n  storageCache: any = {};\n  private _deviceUUID;\n  private nativeStorageI;\n  constructor(private ngfConfig?: NgForageConfig, private readonly ngf?: NgForage, private readonly ngfCache?: NgForageCache) {\n  }\n\n\n\n  initStorage() {\n    return new Promise((resolve, reject) => {\n      if (window['cordova']) {\n        this.initNgForage();\n      }\n      this.ngf.iterate((value, key, iteratonNumber) => {\n        this.storageCache[key] = value;\n      }).then(result => {\n        this.checkDeviceId();\n        return resolve('iteration is completed')\n      }).catch(error => {\n        return reject(error);\n      });\n    });\n  }\n\n  getStorage() {\n    return this.storageCache;\n  }\n\n\n  setValue(key, value) {\n    if (window['cordova']) {\n      this.initNgForage();\n    }\n    this.storageCache[key] = value;\n    return this.ngf.setItem(key, value).then(result => {\n      return result;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getValue(key): any | Promise<any> {\n    if (!this.storageCache[key]) {\n      return null;\n    } try {\n      const obj = this.storageCache[key]\n      return JSON.parse(obj);\n    } catch (error) {\n      return this.storageCache[key];\n    }\n  }\n\n  remove(key) {\n    delete this.storageCache[key];\n    if (window['cordova']) {\n      this.initNgForage();\n    }\n    this.ngf.removeItem(key).then(fulfilled => {\n      delete this.ngf[key];\n    }).catch(error => {\n      console.error('Could not remove', key);\n    });\n  }\n\n  clear() {\n    this.storageCache = {};\n    this.ngf.clear();\n  }\n\n  private pluginCheck() {\n    if (window['cordova'] && window['NativeStorage']) {\n      this.nativeStorageI = window['NativeStorage'];\n      // return true;\n    }\n    // this.initStorage();\n  }\n\n  private getItemNs(key) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.getItem(key, result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private setItemNs(key, value) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.setItem(key, value, result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private removeItemNs(key) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.remove(key, (result) => {\n          resolve(result);\n        }, (error) => {\n          reject(error);\n        });\n      }\n    })\n  }\n\n  private clearNs() {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.clear(result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private initNgForage() {\n    this.ngfConfig.configure({\n      name: 'MyApp',\n      driver: [\n        Driver.WEB_SQL,\n      ]\n    });\n\n  }\n\n  private promiseReflect(promise) {\n    return promise.then(resolved => { return { v: resolved, status: 'resolved' } }, error => { return { e: error, status: 'rejected' } })\n  }\n\n  clearLocalStorage() {\n    this.remove('userObj');\n    this.remove('accessToken');\n    this.remove('refreshToken');\n    this.remove('registrationId');\n  }\n\n  /**\n   * Due to timing issues and circular dependency checkDeviceId is moved from NSystemService\n  */\n\n  checkDeviceId() {\n    if (NSystemService.getInstance().checkDevice() === 'browser') {\n      this._deviceUUID = this.getValue('uuid');\n\n      if (!this._deviceUUID) {\n        this._deviceUUID = new NUtility().generateUUID();\n        this.setValue('uuid', this._deviceUUID);\n      }\n    } else {\n      window['plugins'].uniqueDeviceID.get((uuid) => {\n        this._deviceUUID = uuid;\n        this.setValue('uuid', this._deviceUUID);\n      });\n    }\n    return this._deviceUUID;\n  }\n\n  public get deviceUUID() {\n    return this._deviceUUID;\n  }\n}\n","import { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NTokenService {\n\n  nSessionStorage;\n  // nLocalStorageService: NLocalStorageService;\n\n  constructor(private nLocalStorageService: NLocalStorageService) {\n    this.nSessionStorage = new NSessionStorageService();\n    // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n  updateTokens(tokensObj, isRemember?: Boolean) {\n    let userObj = this.decodeToken(tokensObj['accessToken'])\n    this.nSessionStorage.setValue('accessToken', tokensObj['accessToken']);\n    this.nSessionStorage.setValue('refreshToken', tokensObj['refreshToken']);\n    this.nSessionStorage.setValue('userObj', JSON.stringify(userObj));\n\n    if ((isRemember || this.nLocalStorageService.getValue('accessToken'))) {\n      this.nLocalStorageService.setValue('accessToken', tokensObj['accessToken']);\n      this.nLocalStorageService.setValue('refreshToken', tokensObj['refreshToken']);\n      this.nLocalStorageService.setValue('userObj', JSON.stringify(userObj));\n    }\n  }\n\n  updateSessionStorage() {\n    this.updateTokens(this.nLocalStorageService.getStorage(), true);\n  }\n\n  public urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0: { break; }\n      case 2: { output += '=='; break; }\n      case 3: { output += '='; break; }\n      default: {\n        throw 'Illegal base64url string!';\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  // credits for decoder goes to https://github.com/atk\n  private b64decode(str: string): string {\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output: string = '';\n\n    str = String(str).replace(/=+$/, '');\n\n    if (str.length % 4 == 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (\n      // initialize result and counters\n      let bc: number = 0, bs: any, buffer: any, idx: number = 0;\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n  // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), (c: any) => {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  }\n\n  public decodeToken(token: string): any {\n    let parts = token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error('JWT must have 3 parts');\n    }\n\n    let decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error('Cannot decode the token');\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  public getTokenExpirationDate(token: string): Date {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    let date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    let date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date == null) {\n      return false;\n    }\n\n    // Token expired?\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable, Subscription } from 'rxjs';\n\nconst ServiceName: string = \"PubSub Service\";\n\n@Injectable()\nexport class NPubSubService {\n  private events = {};\n\n  constructor() { }\n\n  public $sub(event: string): Observable<any>;\n  public $sub(event: string, callback: (value: any) => void): Subscription;\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n  public $sub(event: string, callback?: (value: any) => void, error?: (error: any) => void, complete?: () => void) {\n      if (!event) {\n          throw new Error(`[${ServiceName}] => Subscription method must get event name.`);\n      }\n\n      if (this.events[event] === undefined) {\n          this.events[event] = new Subject<any>();\n      }\n\n      if (typeof callback !== 'function') {\n          return this.events[event].asObservable();\n      } else {\n          return this.events[event].asObservable().subscribe(callback, error, complete);\n      }\n  }\n\n  public $pub(event: string, eventObject?: any) {\n      if (!event) {\n          throw new Error(`[${ServiceName}] => Publish method must get event name.`);\n      } else if (!this.events[event]) {\n          return;\n      }\n      this.events[event].next(eventObject);\n  }\n}\n\nexport interface IPubSubService {\n  $pub(event: string, eventObject?: any);\n  $sub(event: string): Observable<any>;\n  $sub(event: string, callback: (value: any) => void): Subscription;\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n}\n\ninterface I$sub {\n  (event: string): Observable<any>;\n  (event: string, callback: (value: any) => void): Subscription;\n  (event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  (event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n}\n","import { Injectable } from '@angular/core';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\n\n@Injectable()\nexport class NLogoutService {\n\n  nSessionStorage = new NSessionStorageService();\n  // nLocalStorageService = new NLocalStorageService();\n  constructor(private nLocalStorageService: NLocalStorageService) { }\n\n  logout() {\n    this.nSessionStorage.clearSessionStorage();\n    this.nLocalStorageService.clearLocalStorage();\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject ,  Observable } from 'rxjs';\n// import { NSnackbarService } from './n-snackbar.service';\nimport { NLogoutService } from './n-logout.service';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\n// import { NSnackbarService } from './snackbar/service/snackbar.service';\n\n@Injectable()\nexport class NHTTPLoaderService {\n  public pendingRequests = 0;\n  public showLoading = false;\n  private _isHTTPRequestInProgress = new Subject<boolean>();\n  _isHTTPRequestInProgress$ = this._isHTTPRequestInProgress.asObservable();\n\n  constructor(private nLogoutService: NLogoutService, private nPubSubService: NPubSubService) {\n\n  }\n\n  isHTTPRequestInProgress(bool) {\n    if (bool) {\n      this.pendingRequests++;\n      if (!this.showLoading) {\n        this._isHTTPRequestInProgress.next(bool);\n      }\n      this.showLoading = true;\n    } else {\n      this.pendingRequests--;\n      if (this.pendingRequests <= 0) {\n        if (this.showLoading) {\n          this._isHTTPRequestInProgress.next(bool);\n        }\n        this.showLoading = false;\n      }\n    }\n  }\n\n  alertError(error) {\n    if (error.status < 200 || error.status > 500) {\n      if (error.status === 0) {\n        this.nPubSubService.$pub('openSnackBar', 'Connectivity issue');\n      } else {\n        this.nPubSubService.$pub('openSnackBar', 'Response failure')\n      }\n    } else if (error.status === 401) {\n      this.nLogoutService.logout();\n      if (error.error) {\n        this.nPubSubService.$pub('openSnackBar', error.error)\n      } else {\n        this.nPubSubService.$pub('openSnackBar', error)\n      }\n    } else if (error.error) {\n      if (error.error instanceof Object) {\n        this.nPubSubService.$pub('openSnackBar', error.error.message)\n      } else {\n        this.nPubSubService.$pub('openSnackBar', error.error)\n      }\n    } else {\n      this.nPubSubService.$pub('openSnackBar', 'Response failure')\n    }\n  }\n\n}\n\n\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\nimport { NSystemService } from './n-system.service';\nimport { Observable } from 'rxjs';\ndeclare var PushNotification: any;\ndeclare var APNSPushNotification: any;\nimport { NLocalStorageService } from './n-localStorage.service';\nimport * as firebase from 'firebase';\nimport { NPubSubService } from './n-pubSub.service';\nimport { HttpClient } from '@angular/common/http';\nimport { NSessionStorageService } from './n-sessionStorage.service';\n// import { Router } from '@angular/router';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { environment } from '../../environments/environment.prod';\n\n\n@Injectable()\nexport class NNotificationService {\n  // private static instance: NNotificationService;\n  private systemService: NSystemService = NSystemService.getInstance();\n  private firebaseSenderId: string;\n  private isNotificationEnabled: boolean;\n  private deviceType; string;\n  private resDetails;\n  private deviceUUID: string;\n  private possiblePushTypes: string[] = ['APNS','FCM'];\n  loginSubscribe;\n  sessionStorage: NSessionStorageService;\n  appName;\n  constructor(private localStorageService: NLocalStorageService, private pubSubService: NPubSubService,\n    private http: HttpClient, private bHttpLoader: NHTTPLoaderService) {\n    this.firebaseSenderId = this.systemService.getVal('firebaseSenderId');\n    this.isNotificationEnabled = this.systemService.getVal('isNotificationEnabled');\n    this.appName = this.systemService.getVal('appName');\n    this.deviceType = this.systemService.deviceType;\n    this.sessionStorage = new NSessionStorageService();\n    this.loginSubscribe = this.pubSubService.$sub('firebaseRegister', () => {\n      this.enableNotification();\n    })\n  }\n\n  ngOnInit() {\n  }\n\n\n  enableNotification() {\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\n    document.addEventListener('deviceready', event => {\n      if (this.isNotificationEnabled) {\n        if (this.deviceType && this.deviceType != 'browser') {\n          this.deviceType = this.systemService.deviceType;\n          this.checkPermission(pushType).then(res => {\n            if (res) {\n              this.initializeNotifications(pushType);\n            }\n          });\n        }\n      }\n    });\n    if (this.isNotificationEnabled && pushType !== 'APNS') {\n      if (this.deviceType && this.deviceType == 'browser' && window['Notification']) {\n        this.initialiseWebPush();\n      }\n    }\n  }\n\n  initialiseWebPush() {\n    const __this = this;\n    const messaging = firebase.messaging();\n\n    Notification.requestPermission()\n      .then(function () {\n        return messaging.getToken();\n      })\n      .then(function (token) {\n        if (token) {\n          __this.sendRegDetails(token);\n        }\n      })\n      .catch(function (err) {\n        __this.bHttpLoader.alertError(err);\n      });\n\n    messaging.onMessage(function (payload) {\n      if (payload['notification']) {\n        let notificationObj = payload['notification'];\n        let options = {\n          body: notificationObj.body,\n          icon: notificationObj.icon\n        }\n        // creating a native browser message\n        let notificationUI = new Notification(notificationObj.title, options);\n        notificationUI.onclick = function () {\n          window.focus(); // window is focused when the user clicks the notification using this\n        }\n      }\n    });\n  }\n\n  checkPermission(pushType?) {\n    // Android & iOS only\n    // Checks whether the push notification permission has been granted.\n    return new Promise((resolve) => {\n      pushType = this.getPushType(pushType);\n      if ((this.deviceType === 'Android' || this.deviceType === 'iOS') && (pushType === 'FCM' )) {\n        PushNotification.hasPermission(function (data) {\n          return resolve(data.isEnabled);\n        });\n      } else if (this.deviceType === 'iOS' && pushType === 'APNS') {\n         APNSPushNotification.hasPermission(function (data) {\n          return resolve(data.isEnabled);\n        });\n      } else {\n        return resolve(true);\n      }\n    });\n  }\n\n  initializeNotifications(pushType?) {\n    //pushType = pushType ? pushType : 'FCM';\n    pushType = this.getPushType(pushType);\n\n    let push;\n    // Default if for FCM\n    if (pushType === 'FCM') {\n      push = window['PushNotification'].init({\n        android: {\n          senderID: this.firebaseSenderId\n        },\n        ios: {\n          alert: \"true\",\n          badge: \"true\",\n          sound: \"true\",\n          senderID: this.firebaseSenderId\n        },\n      });\n    }\n    // New APNS plugin init\n    else if (pushType === 'APNS') {\n      push = window['APNSPushNotification'].init({\n        ios: {\n          alert: \"true\",\n          badge: \"true\",\n          sound: \"true\"\n        }\n      });\n    }\n    push.on('registration', (data) => {\n      // data.registrationId\n      this.sendRegDetails(data.registrationId);\n    });\n\n    // ToDo Christy get call back function from app user to change what happens once a notification arrives\n    push.on('notification', (data) => {\n      window['cordova'].plugins.notification.local.schedule({\n        title: data.title,\n        text: data.message,\n        sound: data.sound,\n        at: new Date().getTime()\n      });\n    });\n\n    push.on('error', (e) => {\n      // e.message\n      console.error(e);\n    });\n  }\n\n  sendRegDetails(registrationId) {\n    this.localStorageService.setValue('registrationId', registrationId);\n    var url = this.systemService.getTenantUrl() + 'notification/' + this.systemService.getVal('appName') + '/register';\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\n    this.http.post(url, {\n      'key': this.sessionStorage.getValue('userObj')['userKey'],\n      'uuid': this.localStorageService.getValue('uuid'), \n      'fbregid': registrationId,\n      'pushType': pushType\n    }).subscribe(result => {\n      // this.pubSubService.$pub('FBRegComp');\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  getPushType (currPushType) {\n    let isValidPush = typeof currPushType !== 'undefined' && this.possiblePushTypes.includes(currPushType.toUpperCase());\n    let pushType = isValidPush ? currPushType.toUpperCase() : 'FCM';\n    return pushType;\n  }\n\n  ngOnDestroy() {\n    this.loginSubscribe.unSubscribe();\n  }\n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable, EventEmitter, Output, Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NSystemService } from './n-system.service';\nimport { NTokenService } from './n-token.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NNotificationService } from './n-notification.service';\n\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class NLoginService {\n  loginUrl;\n  appProperties;\n  systemService;\n  nSessionStorage;\n  uuid;\n  details: any;\n\n  @Output() loginCompleted = new EventEmitter();\n  constructor(private http: HttpClient, private pubSubService: NPubSubService, private notificationService: NNotificationService,\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\n    this.systemService = NSystemService.getInstance();\n    // this.nTokenService = new NTokenService();\n    this.nSessionStorage = new NSessionStorageService();\n    // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n\n  login(userName, password, isRemember?) {\n    this.appProperties = this.systemService.getVal('properties');\n    this.loginUrl = this.systemService.getAuthUrl() + this.appProperties.appName;\n    this.uuid = this.nLocalStorageService.getValue('uuid');\n    if (!this.uuid) {\n      this.uuid = this.nLocalStorageService.checkDeviceId();\n    }\n    this.details = {\n      username: userName,\n      password: password,\n    };\n    this.details.platformDetails = this.systemService.getPlatformDetails(this.systemService.checkDevice());\n    this.details.platformDetails['uuid'] = this.uuid;\n    return this.http.post(this.loginUrl, JSON.stringify(this.details)).pipe(map(result => {\n      const tokensObj = result;\n      if (tokensObj) {\n        this.nTokenService.updateTokens(tokensObj, isRemember);\n      }\n      // TODO chris array of supported pushes currently only support APNS and Firebase\n      if ((this.systemService.getVal('firebaseSenderId') != 'FIREBASE_SENDER_ID' && this.systemService.getVal('firebaseAuthKey') != 'FIREBASE_AUTH_KEY') \n           || (this.systemService.getVal('pushType') === 'APNS' && this.systemService.isIOS())) {\n        this.pubSubService.$pub('firebaseRegister');\n      }\n      this.pubSubService.$pub('loginComplete');\n      return (result);\n    }, error => {\n      return (error);\n    }));\n  }\n\n  isLoggedIn() {\n    return this.nLocalStorageService.initStorage().then(result => {\n      if (this.nSessionStorage.getValue('accessToken') && this.nSessionStorage.getValue('refreshToken') &&\n        this.nSessionStorage.getValue('accessToken') != 'null' && this.nSessionStorage.getValue('refreshToken') != 'null') {\n        return true;\n      }\n      return false;\n    }).catch(error => {\n      return false;\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { NLoginService } from './n-login.service';\n\n@Injectable()\nexport class NAuthGuardService implements CanActivate {\n\n  constructor(private nLoginService: NLoginService, private router: Router) { }\n\n  canActivate() {\n    return this.nLoginService.isLoggedIn().then(result => {\n      if (result) {\n        return true;\n      } else {\n        this.router.navigate(['unauthorized']);\n        return false;\n      }\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { NSystemService } from './n-system.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class NDataModelService {\n  private systemService: NSystemService;\n  private dmUrl: string;\n  private invalidDataModelName: string = 'Invalid data model name.';\n  private invalidDataModelId: string = 'Invalid data model id.';\n  private invalidDataModelObj: string = 'Invalid data model object.';\n  private dmDs;\n  constructor(private http: HttpClient) {\n    this.systemService = NSystemService.getInstance();\n  }\n\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName\n   * @param filter The filter query parameter allows to specify conditions on the documents to return.\n   * The filter qparam value is any mongodb queryâ¦ Defaults to {}\n   * @param keys Projections to be applited on mongo db.\n   * @param sort sort to be applied on the query results. Defaults to {}\n   * @param pagenumber Page number for paginated queries. Defaults to 1\n   * @param pagesize Size of each page to be returned. Defaults to 100.\n   */\n  get(dataModelName, filter?, keys?, sort?, pagenumber?, pagesize?): Observable<any> {\n    if (dataModelName) {\n      // let modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      let modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n      if (this.checkIfValid(filter) || this.checkIfValid(keys) || this.checkIfValid(sort) ||\n        this.checkIfValid(pagenumber) || this.checkIfValid(pagesize)) {\n        let queryString = `${this.toQueryString({\n          'filter': filter,\n          'keys': keys,\n          'sort': sort,\n          'pagenumber': pagenumber,\n          'pagesize': pagesize\n        })}`;\n        if (queryString === '') {\n          queryString += '?filter={}';\n        } else {\n          queryString = '?'.concat(queryString);\n        }\n        modelNameUrl += queryString;\n      }\n      return this.http.get(modelNameUrl).pipe(map((value, index) => {\n        return value;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    } else {\n      return throwError(new Error(`Could not get ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // PUT /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName Data model name of the app\n   * @param dataModelObj Data Model object which is to be inserted\n   */\n  put(dataModelName, dataModelObj): Observable<any> {\n    if (dataModelName) {\n      if (dataModelObj) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n        return this.http.put(modelNameUrl, dataModelObj).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n        return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelObj}`));\n      }\n    } else {\n      return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName\n   * @param filter\n   */\n  delete(dataModelName, filter): Observable<any> {\n    let modelNameUrl;\n    if (dataModelName) {\n      // modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n\n      if (this.checkIfValid(filter) && filter != '') {\n        modelNameUrl += `?filter=${filter}`;\n      } else {\n        modelNameUrl += '?filter={}';\n      }\n      return this.http.delete(modelNameUrl).pipe(map((value, index) => {\n        return value;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    } else {\n      return throwError(new Error(`Could not delete ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName Data model name which is to be updated\n   * @param dataModelObj New data model object\n   */\n  update(dataModelName, updateObject): Observable<any> {\n    if (dataModelName && updateObject) {\n      // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n      return this.http.patch(modelNameUrl, updateObject).pipe(map((value, index) => {\n        return value;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    } else {\n      return throwError(new Error(`Could not update ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be updated\n   * @param dataModelId Data model id which is to be updated\n   */\n  getById(dataModelName, dataModelId): Observable<any> {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        return this.http.get(modelNameUrl).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n       throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be deleted\n   * @param dataModelId Data model id which is to be deleted\n   */\n  deleteById(dataModelName, dataModelId) {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        return this.http.delete(modelNameUrl).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  //PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be update\n   * @param dataModelId Data model id which is to be updated\n   * @param dataModelObj Data Model object which is to be inserted\n   */\n  updateById(dataModelName, dataModelId, dataModelObj) {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        var dmObj = Object.assign({}, dataModelObj);\n        delete dmObj['_id'];\n        return this.http.patch(modelNameUrl, dmObj).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n        throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  private toQueryString(obj) {\n    const parts = [];\n    for (const i in obj) {\n      if (obj.hasOwnProperty(i) && this.checkIfValid(obj[i])) {\n        parts.push((i) + '=' + JSON.stringify(obj[i]));\n      }\n    }\n    return parts.join('&');\n  }\n\n  private checkIfValid(value: any) {\n    if (value === undefined || value == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private getDataSourceURL(dataModelName) {\n    if (!this.dmDs) {\n      this.dmDs = window['neutrinos']['dataSource'];\n    }\n    const dsDm = this.dmDs[dataModelName];\n    const properties = this.systemService.properties;\n    if (dsDm) {\n      return properties.baseUrl + properties.tenantName + '/datamodel/' + dsDm + '/' + properties.appName + '/';\n    } else {\n      return this.systemService.getDataModelUrl();\n    }\n  }\n\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpHeaders,\n  HttpResponse,\n  HttpErrorResponse,\n  HttpClient\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { NSystemService } from './n-system.service';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NTokenService } from './n-token.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { timeout, catchError, finalize, switchMap, filter, take } from 'rxjs/operators';\n\n@Injectable()\nexport class NHttpService {\n  timeout = 90000;\n  systemService;\n  nSessionStorage;\n  appProperties;\n  isRefreshingToken = false;\n  nPubSubService;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n  constructor(private nHTTPLoader: NHTTPLoaderService, private inj: Injector,\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\n    this.systemService = NSystemService.getInstance();\n    this.nSessionStorage = new NSessionStorageService();\n    this.appProperties = this.systemService.getVal('properties');\n    this.nPubSubService = new NPubSubService();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.requestInterceptor();\n\n    // Pass on the cloned request instead of the original request.\n    return next.handle(this.requestOptions(req))\n      .pipe(timeout(this.timeout)\n        , catchError(error => this.onCatch(error, req, next))\n        , finalize(() => {\n          this.onFinally();\n        }));\n  }\n\n  updateToken(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): any {\n    if (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\n      this.appProperties.appAuthenticationStrategy === 'localAuth') {\n      if (!this.isRefreshingToken) {\n        this.isRefreshingToken = true;\n\n        // Reset here so that the following requests wait until the token\n        // comes back from the refreshToken call.\n        this.tokenSubject.next(null);\n\n        return this.refreshToken()\n          .pipe(\n            switchMap((tokensObj: Object) => {\n              if (tokensObj) {\n                this.nTokenService.updateTokens(tokensObj);\n                const newToken = tokensObj['accessToken'];\n                this.tokenSubject.next(newToken);\n                return next.handle(this.requestOptions(req));\n              }\n              return throwError(new Error('Can\\'t refresh the token'));\n            }),\n            catchError(err => this.onCatchError(err)),\n            finalize(() => this.isRefreshingToken = false)\n          );\n      } else {\n        return this.tokenSubject.pipe(\n          filter(token => token != null),\n          take(1),\n          switchMap(token => next.handle(this.requestOptions(req)))\n        );\n      }\n    } else {\n      return this.onCatchError(error);\n    }\n  }\n\n  refreshToken() {\n    const http = this.inj.get(HttpClient);\n    const appProperties = this.systemService.getVal('properties');\n    const refreshUrl = this.systemService.getAuthUrl() + appProperties.appName + '/refresh';\n    const body = {\n      'platformDetails': this.systemService.getPlatformDetails(this.systemService.checkDevice()),\n      'userKey': this.nSessionStorage.getValue('userObj')['userKey'],\n      'refreshToken': this.nSessionStorage.getValue('refreshToken')\n    };\n    body.platformDetails['uuid'] = this.nLocalStorageService.getValue('uuid');\n    return http.post(refreshUrl, body);\n  }\n\n\n  /**\n   * Request options.\n   * @param options\n   * @returns HttpRequest\n   */\n  private requestOptions(req?: HttpRequest<any>) {\n    let headers = req.headers;\n    if (req.headers == null) {\n      headers = new HttpHeaders();\n    }\n    req = req.clone({\n      url: this.getFullUrl(req.url),\n      headers: headers\n    });\n    const baseUrl = NSystemService.getInstance().getVal('baseUrl');\n    const isArt = (baseUrl !== '' && req.url.includes(baseUrl));\n    return isArt ? this.addDefaultHeaders(req) : req;\n  }\n\n\n  /**\n  * Default options.\n  * @param options\n  * @returns HttpHeadedrs\n  */\n  private addDefaultHeaders(req: any) {\n    /**\n     * TODO: Add all default Headers over here\n     */\n    if (!req.headers.has('Access-Control-Allow-Origin')) {\n      req.headers = req.headers.set('Access-Control-Allow-Origin', '*');\n    }\n\n    if (!req.headers.has('Content-Type')) {\n      req.headers = req.headers.set('Content-Type', 'application/json');\n    } else if (req.headers.has('Content-Type') && (req.headers.get('Content-Type') === 'no-content')) {\n      req.headers = req.headers.delete('Content-Type');\n    }\n\n    if (!req.headers.has('Accept')) {\n      req.headers = req.headers.set('Accept', 'application/json');\n    }\n\n    if (!req.headers.has('Authorization')) {\n      this.appProperties = this.systemService.getVal('properties');\n      if (this.appProperties && this.appProperties.appAuthenticationStrategy === 'basicAuth') {\n        let username, password;\n        if (this.appProperties.basicAuthUser && this.appProperties.basicAuthPassword) {\n          username = this.appProperties.basicAuthUser;\n          password = this.appProperties.basicAuthPassword;\n        } else {\n          username = \"bhive-art-proxyuser\";\n          password = \"password\";\n          console.warn(\"Authentication strategy: Basic Auth. basicAuthUser and basicAuthPassword are not configured in environment. Setting default values.\");\n        }\n        req.headers = req.headers.set('Authorization', 'Basic ' + btoa(username + \":\" + password));\n      } else if (this.appProperties && (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\n        this.appProperties.appAuthenticationStrategy === 'localAuth')) {\n        if (this.nSessionStorage.getValue('accessToken')) {\n          req.headers = req.headers.set('Authorization', 'Bearer ' + this.nSessionStorage.getValue('accessToken'));\n        }\n      }\n    }\n    return req;\n  }\n\n  /**\n   * Build API url.\n   * @param url\n   * @returns string\n   */\n  private getFullUrl(url: string): string {\n    // return full URL to API here\n    return url;\n  }\n\n  /**\n   * Request interceptor.\n   */\n  private requestInterceptor(): void {\n    this.nHTTPLoader.isHTTPRequestInProgress(true);\n  }\n\n  /**\n   * Response interceptor.\n   */\n  private responseInterceptor(): void {\n    this.nHTTPLoader.isHTTPRequestInProgress(false);\n  }\n\n  /**\n    * Error handler.\n    * @param error\n    * @param caught\n    * @returns ErrorObservable\n    */\n  private onCatch(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    if (error instanceof HttpErrorResponse) {\n      if ((<HttpErrorResponse>error).status === 403 && (<HttpErrorResponse>error).error.message === 'jwt expired') {\n        return this.updateToken(error, req, next);\n      } else {\n        return this.onSubscribeError(error);\n      }\n    } else {\n      return this.onSubscribeError(error);\n    }\n  }\n\n  /**\n   * onSubscribeError\n   * @param error\n   */\n  private onSubscribeError(err: HttpErrorResponse): Observable<any> {\n    this.nHTTPLoader.alertError(err);\n    return this.onCatchError(err);\n  }\n  /**\n   * onFinally\n   */\n  private onFinally(): void {\n    this.responseInterceptor();\n  }\n\n  private onCatchError(error: HttpErrorResponse): Observable<any> {\n    return throwError(error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n// import { MatSnackBar } from '@angular/material';\nimport { Subject, Observable } from 'rxjs';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\n\n\n@Injectable()\nexport class NSnackbarService {\n  snackBarListner;\n  private snackService = new Subject<any>();\n  constructor(private nPubSubService: NPubSubService) {\n    if (NSystemService.getInstance().getVal('useDefaultExceptionUI')) {\n      this.snackBarListner = this.nPubSubService.$sub('openSnackBar', (msg) => {\n        this.openSnackBar(msg);\n      })\n    }\n  }\n\n  get() {\n    return this.snackService.asObservable();\n  }\n\n\n\n  add(data: {\n    msg: string, timeout?: number, background?: string, color?: string, customClass?: any,\n    action?: { text: string, onClick?: Function, color?: string }, onAdd?: Function, onRemove?: Function\n  }) {\n    this.snackService.next({\n      action: 'add',\n      data: data\n    });\n  }\n\n  remove(id: string) {\n    this.snackService.next({ action: 'remove', id: id });\n  }\n\n  clear() {\n    this.snackService.next({ action: 'clear' });\n  }\n\n  openSnackBar(message, timeout?, ) {\n    this.add({\n      msg: message,\n      timeout: timeout || 5000,\n      action: {\n        text: 'Close',\n        onClick: (snack) => {\n        },\n      },\n      onAdd: (snack) => {\n      },\n      onRemove: (snack) => {\n      }\n    });\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'n-snack',\n  template: `\n     <div class=\"snack\" [ngStyle]=\"{background: background ? background : '#323232' , color: color ? color : '#fff'}\" [ngClass]=\" ['snackbar-layout', 'customClass' ]\">\n          <ng-content></ng-content>\n       </div> \n  `,\n  styleUrls: ['../snackbar/snackbar.style.css']\n})\nexport class SnackComponent {\n  @Input() background;\n  @Input() color;\n  @Input() customClass;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NSnackbarService } from '../../n-snackbar.service';\n\n@Component({\n  selector: 'n-snackbar',\n  template: `\n      <div class=\"snackbars\" [ngClass]=\"position || 'bottom-center'\">\n          <n-snack   *ngFor=\"let snackbar of snacks\" [background]=\"snackbar.background || background\"\n                        [customClass]=\"snackbar.customClass || customClass\"\n                        [color]=\"snackbar.color || color || calcTextColor(snackbar.background || background)\">\n              <div class=\"container\">\n              <div class=\"snack-text child\" >\n                  {{snackbar.msg}}\n              </div>\n              <div *ngIf=\"snackbar.action.text\" class=\"snack-action\" (click)=\"snackbar.action.onClick()\"\n                   [ngStyle]=\"{color: snackbar.action.color || accent}\">\n                  {{snackbar.action.text}}\n              </div>\n              </div>\n          </n-snack>\n      </div>\n  `,\n  styleUrls: ['./snackbar.style.css']\n})\nexport class SnackbarComponent {\n  @Input() position: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n  @Input() max: number = 1;\n  @Input() background: string;\n  @Input() accent: string;\n  @Input() color: string;\n  @Input() customClass: any;\n  @Input() timeout: number;\n\n  @Output() public onAdd: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public onRemove: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public onClear: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  snacks: Array<{\n    id: string, msg: string, timeout?: number, color?: string, background?: string, customClass?: any, action?: {\n      text: string, onClick?: Function, color?: string\n    }, onAdd?: Function, onRemove?: Function, timeoutObj?: any\n  }> = [];\n\n  constructor(private snackbarService: NSnackbarService) {\n    this.snackbarService.get()\n      .subscribe(snack => {\n        if (snack.action === 'add') {\n          this.add(snack.data);\n        } else if (snack.action === 'remove') {\n          this.remove(snack.id);\n        } else if (snack.action === 'clear') {\n          this.clear();\n        }\n      });\n  }\n\n  add(snack) {\n    let timeout;\n    const id = this.uuid();\n\n    if (this.max && this.max > 0 && this.snacks.length === this.max) {\n      this.remove(this.snacks[0].id);\n    }\n\n    if (snack.timeout || this.timeout) {\n      timeout = setTimeout(() => {\n        this.remove(id);\n      }, snack.timeout || this.timeout)\n    }\n\n    const data = Object.assign({ id: id, timeoutObj: timeout }, snack);\n\n    if (snack.action) {\n      const that = this;\n      const fcn = snack.action.onClick || new Function();\n      snack.action.onClick = () => {\n        fcn(data);\n        that.remove(id);\n      };\n    }\n\n    if (snack.onAdd) {\n      snack.onAdd(data);\n    }\n\n    if (this.onAdd) {\n      this.onAdd.emit(data);\n    }\n\n    this.snacks.push(data);\n  }\n\n  remove(id) {\n    const snack = this.snacks.find(obj => obj.id === id);\n\n    if (snack) {\n      if (snack.onRemove) {\n        snack.onRemove(snack);\n      }\n\n      if (this.onRemove) {\n        this.onRemove.emit(snack);\n      }\n\n      if (snack.timeoutObj) {\n        clearTimeout(snack.timeoutObj);\n      }\n    }\n\n    this.snacks = this.snacks.filter(obj => obj.id !== id);\n  }\n\n  clear() {\n    // this.snacks.forEach(snack => {\n    //   this.remove(snack.id);\n    // });\n\n    this.snacks = [];\n\n    if (this.onClear) {\n      this.onClear.emit(true);\n    }\n  }\n\n  uuid() {\n    // tslint:disable:no-bitwise\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n    // tslint:enable:no-bitwise\n  }\n\n  calcTextColor(background) {\n    if (!background) {\n      return null;\n    }\n\n    function hexToRgb(hex) {\n      const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n      hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n        return r + r + g + g + b + b;\n      });\n\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      } : null;\n    }\n\n    const rgb = hexToRgb(background);\n    if (!rgb) {\n      return null;\n    }\n\n    const color = [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n\n    for (let i = 0; i < color.length; ++i) {\n      if (color[i] <= 0.03928) {\n        color[i] = color[i] / 12.92;\n      } else {\n        color[i] = Math.pow((color[i] + 0.055) / 1.055, 2.4);\n      }\n    }\n\n    const l = 0.2126 * color[0] + 0.7152 * color[1] + 0.0722 * color[2];\n\n    if (l > 0.179) {\n      return '#000';\n    } else {\n      return '#fff';\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\n\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { MatSnackBar } from \"@angular/material\";\nimport { NAuthGuardService } from './n-authGaurd.service';\nimport { NDataModelService } from './n-dataModel.service';\n// import { NDataSourceService } from './n-dataSource.service';\nimport { NHttpService } from './n-HTTP.service';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NLoginService } from './n-login.service';\nimport { NLogoutService } from './n-logout.service';\nimport { NNotificationService } from './n-notification.service';\nimport { NSnackbarService } from './n-snackbar.service';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { NSessionStorageService } from './n-sessionStorage.service'\nimport { NTokenService } from './n-token.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { RouterModule } from '@angular/router';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgForageModule } from 'ngforage';\n\nimport { SnackComponent } from './snackbar/snack/snack.component';\nimport { SnackbarComponent } from './snackbar/snackbar/snackbar.component';\n// import {SafeHtmlPipe} from './snackbar/pipe/safe-html.pipe';\n\n\n// export function updateEnvProperties(env) {\n//   console.log(env);\n//   NSystemService.getInstance().environments = env;\n// }\n\nexport function startupServiceFactory(startupService: NLocalStorageService) {\n  const res = () => {\n    // console.log('module before initstorage call');\n    return startupService.initStorage();\n\n  }\n  return res;\n}\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule\n    // NgForageModule.forRoot()\n    // BrowserModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NHttpService,\n      multi: true\n    },\n    {\n      // Provider for APP_INITIALIZER\n      provide: APP_INITIALIZER,\n      useFactory: startupServiceFactory,\n      deps: [NLocalStorageService],\n      multi: true\n    },\n    NAuthGuardService,\n    NDataModelService,\n    // NDataSourceService,\n    NHttpService,\n    NHTTPLoaderService,\n    NLocalStorageService,\n    NLoginService,\n    NLogoutService,\n    NNotificationService,\n    NSnackbarService,\n    NPubSubService,\n    //     NSystemService,\n    NSessionStorageService,\n    NTokenService\n  ],\n  declarations: [\n    SnackComponent,\n    SnackbarComponent\n  ],\n  exports: [\n    SnackComponent,\n    SnackbarComponent\n  ]\n\n})\nexport class NeutrinosSeedServicesModule {\n\n}\n"]}