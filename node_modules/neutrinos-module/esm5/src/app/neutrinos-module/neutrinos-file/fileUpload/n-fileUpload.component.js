import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, ViewChild, Renderer2 } from '@angular/core';
// import { FileIOService } from '../services/filesystem.service';
import { NFileIOService } from '../services/n-fileIO.service';
var NFileUploadComponent = /** @class */ (function () {
    function NFileUploadComponent(fileIOService, _renderer) {
        this.fileIOService = fileIOService;
        this._renderer = _renderer;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    /**
     * Method executed when upload button is clicked.
     */
    NFileUploadComponent.prototype.handleUpload = function () {
        var _this = this;
        this.isDone = false;
        if (this.file && this.uploadOptions && this.uploadOptions.entityName && this.uploadOptions.metadata) {
            this.fileIOService.upload({ files: this.file, entityName: this.uploadOptions.entityName, metadata: this.uploadOptions.metadata })
                .then(function (res) {
                _this.isDone = true;
                _this.onsuccess.emit(res);
            })
                .catch(function (err) { return _this.onerror.emit(err); });
        }
        else {
            this.onerror.emit(new Error('Upload options missing'));
        }
    };
    /**
     * Method executed when a file is selected.
     */
    NFileUploadComponent.prototype.handleSelect = function (fileInput) {
        if (fileInput.target.files && fileInput.target.files[0]) {
            this.file = fileInput.target.files[0];
            this.fileName = this.file.name;
        }
    };
    /**
     * Methods executed when cancel button is clicked.
     * Clears files.
     */
    NFileUploadComponent.prototype.cancel = function () {
        this.file = null;
        this.fileName = null;
        this.isDone = false;
        // check if the file input is rendered before clearing it
        if (this.fileInput) {
            this._renderer.setProperty(this.fileInput, 'value', '');
        }
    };
    NFileUploadComponent.prototype.disableFileUploadButton = function () {
        if (typeof this.disableButton === 'boolean') {
            return this.disableButton;
        }
        return this.disableButton === 'disabled' || this.disableButton === 'true' ? true : false;
    };
    tslib_1.__decorate([
        ViewChild('fileInput', { static: false }),
        tslib_1.__metadata("design:type", Object)
    ], NFileUploadComponent.prototype, "fileInput", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], NFileUploadComponent.prototype, "uploadOptions", void 0);
    tslib_1.__decorate([
        Input('disabled'),
        tslib_1.__metadata("design:type", Object)
    ], NFileUploadComponent.prototype, "disableButton", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], NFileUploadComponent.prototype, "onsuccess", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], NFileUploadComponent.prototype, "onerror", void 0);
    NFileUploadComponent = tslib_1.__decorate([
        Component({
            selector: 'n-file-upload',
            template: "<div>\n  <button mat-raised-button class=\"bh-file-upload\" (click)=\"fileInput.click()\" (keyup)=\"fileInput.click()\" color=\"primary\"\n    *ngIf=\"!fileName\" [disabled]=\"disableFileUploadButton()\">\n    <mat-icon>attach_file</mat-icon>\n    <span>Choose a file...</span>\n    <input #fileInput type=\"file\" (change)=\"handleSelect($event)\" style=\"display:none;\" />\n  </button>\n  <div *ngIf=\"fileName\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleUpload()\">\n      <mat-icon>file_upload</mat-icon>\n      <span>{{fileName}}</span>\n    </button>\n    <button *ngIf=\"!isDone\" mat-icon-button color=\"warn\" (click)=\"cancel()\" class=\"bh-file-upload-cancel\">\n      <mat-icon>cancel</mat-icon>\n    </button>\n    <button *ngIf=\"isDone\" mat-icon-button (click)=\"cancel()\" class=\"bh-file-upload-done\">\n      <mat-icon>done</mat-icon>\n    </button>\n  </div>\n</div>\n",
            styles: [".bh-file-upload{padding-left:8px;padding-right:8px}.bh-file-upload-cancel{height:24px;width:24px;position:relative;top:24px;left:-12px}::ng-deep [dir=rtl] .bh-file-upload-cancel{right:-12px;left:0}.bh-file-upload-cancel mat-icon{border-radius:12px;vertical-align:baseline}.bh-file-upload-done{height:24px;width:24px;position:relative;top:20px;left:-13px}::ng-deep [dir=rtl] .bh-file-upload-done{right:-12px;left:0}.bh-file-upload-done mat-icon{border-radius:12px;vertical-align:baseline}"]
        }),
        tslib_1.__metadata("design:paramtypes", [NFileIOService,
            Renderer2])
    ], NFileUploadComponent);
    return NFileUploadComponent;
}());
export { NFileUploadComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1maWxlVXBsb2FkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ldXRyaW5vcy1tb2R1bGUvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1tb2R1bGUvbmV1dHJpbm9zLWZpbGUvZmlsZVVwbG9hZC9uLWZpbGVVcGxvYWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0Ysa0VBQWtFO0FBQ2xFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQVE5RDtJQVdFLDhCQUNVLGFBQTZCLEVBQzdCLFNBQW9CO1FBRHBCLGtCQUFhLEdBQWIsYUFBYSxDQUFnQjtRQUM3QixjQUFTLEdBQVQsU0FBUyxDQUFXO1FBTHBCLGNBQVMsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN2RCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFJN0IsQ0FBQztJQUVuQzs7T0FFRztJQUNILDJDQUFZLEdBQVo7UUFBQSxpQkFZQztRQVhDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFO1lBQ25HLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDO2lCQUM5SCxJQUFJLENBQUMsVUFBQyxHQUFHO2dCQUNSLEtBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2dCQUNuQixLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMzQixDQUFDLENBQUM7aUJBQ0QsS0FBSyxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQXRCLENBQXNCLENBQUMsQ0FBQztTQUN6QzthQUFNO1lBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsMkNBQVksR0FBWixVQUFhLFNBQWM7UUFDekIsSUFBSSxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUN2RCxJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7U0FDaEM7SUFDSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gscUNBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLHlEQUF5RDtRQUN6RCxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBRUQsc0RBQXVCLEdBQXZCO1FBQ0UsSUFBSSxPQUFPLElBQUksQ0FBQyxhQUFhLEtBQUssU0FBUyxFQUFFO1lBQzNDLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztTQUMzQjtRQUNELE9BQU8sSUFBSSxDQUFDLGFBQWEsS0FBSyxVQUFVLElBQUksSUFBSSxDQUFDLGFBQWEsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQzNGLENBQUM7SUE1RHdDO1FBQXhDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFDLENBQUM7OzJEQUFXO0lBSzFDO1FBQVIsS0FBSyxFQUFFOzsrREFBZTtJQUNKO1FBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7OytEQUFlO0lBQ3ZCO1FBQVQsTUFBTSxFQUFFOzBDQUFZLFlBQVk7MkRBQWdDO0lBQ3ZEO1FBQVQsTUFBTSxFQUFFOzBDQUFVLFlBQVk7eURBQWdDO0lBVHBELG9CQUFvQjtRQUxoQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsZUFBZTtZQUV6Qiw2NUJBQTJDOztTQUM1QyxDQUFDO2lEQWF5QixjQUFjO1lBQ2xCLFNBQVM7T0FibkIsb0JBQW9CLENBK0RoQztJQUFELDJCQUFDO0NBQUEsQUEvREQsSUErREM7U0EvRFksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vLyBpbXBvcnQgeyBGaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvZmlsZXN5c3RlbS5zZXJ2aWNlJztcbmltcG9ydCB7IE5GaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvbi1maWxlSU8uc2VydmljZSc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbi1maWxlLXVwbG9hZCcsXG4gIHN0eWxlVXJsczogWycuL24tZmlsZVVwbG9hZC5jb21wb25lbnQuc2NzcyddLFxuICB0ZW1wbGF0ZVVybDogJy4vbi1maWxlVXBsb2FkLnRlbXBsYXRlLmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBORmlsZVVwbG9hZENvbXBvbmVudCB7XG4gIEBWaWV3Q2hpbGQoJ2ZpbGVJbnB1dCcsIHtzdGF0aWM6IGZhbHNlfSkgZmlsZUlucHV0O1xuICBmaWxlOiBGaWxlO1xuICBmaWxlTmFtZTtcbiAgaXNEb25lOiBib29sZWFuO1xuXG4gIEBJbnB1dCgpIHVwbG9hZE9wdGlvbnM7XG4gIEBJbnB1dCgnZGlzYWJsZWQnKSBkaXNhYmxlQnV0dG9uO1xuICBAT3V0cHV0KCkgb25zdWNjZXNzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgb25lcnJvcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGZpbGVJT1NlcnZpY2U6IE5GaWxlSU9TZXJ2aWNlLFxuICAgIHByaXZhdGUgX3JlbmRlcmVyOiBSZW5kZXJlcjIpIHsgfVxuXG4gIC8qKlxuICAgKiBNZXRob2QgZXhlY3V0ZWQgd2hlbiB1cGxvYWQgYnV0dG9uIGlzIGNsaWNrZWQuXG4gICAqL1xuICBoYW5kbGVVcGxvYWQoKTogdm9pZCB7XG4gICAgdGhpcy5pc0RvbmUgPSBmYWxzZTtcbiAgICBpZiAodGhpcy5maWxlICYmIHRoaXMudXBsb2FkT3B0aW9ucyAmJiB0aGlzLnVwbG9hZE9wdGlvbnMuZW50aXR5TmFtZSAmJiB0aGlzLnVwbG9hZE9wdGlvbnMubWV0YWRhdGEpIHtcbiAgICAgIHRoaXMuZmlsZUlPU2VydmljZS51cGxvYWQoeyBmaWxlczogdGhpcy5maWxlLCBlbnRpdHlOYW1lOiB0aGlzLnVwbG9hZE9wdGlvbnMuZW50aXR5TmFtZSwgbWV0YWRhdGE6IHRoaXMudXBsb2FkT3B0aW9ucy5tZXRhZGF0YSB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgdGhpcy5pc0RvbmUgPSB0cnVlO1xuICAgICAgICAgIHRoaXMub25zdWNjZXNzLmVtaXQocmVzKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGVyciA9PiB0aGlzLm9uZXJyb3IuZW1pdChlcnIpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vbmVycm9yLmVtaXQobmV3IEVycm9yKCdVcGxvYWQgb3B0aW9ucyBtaXNzaW5nJykpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBNZXRob2QgZXhlY3V0ZWQgd2hlbiBhIGZpbGUgaXMgc2VsZWN0ZWQuXG4gICAqL1xuICBoYW5kbGVTZWxlY3QoZmlsZUlucHV0OiBhbnkpOiB2b2lkIHtcbiAgICBpZiAoZmlsZUlucHV0LnRhcmdldC5maWxlcyAmJiBmaWxlSW5wdXQudGFyZ2V0LmZpbGVzWzBdKSB7XG4gICAgICB0aGlzLmZpbGUgPSBmaWxlSW5wdXQudGFyZ2V0LmZpbGVzWzBdO1xuICAgICAgdGhpcy5maWxlTmFtZSA9IHRoaXMuZmlsZS5uYW1lO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBNZXRob2RzIGV4ZWN1dGVkIHdoZW4gY2FuY2VsIGJ1dHRvbiBpcyBjbGlja2VkLlxuICAgKiBDbGVhcnMgZmlsZXMuXG4gICAqL1xuICBjYW5jZWwoKTogdm9pZCB7XG4gICAgdGhpcy5maWxlID0gbnVsbDtcbiAgICB0aGlzLmZpbGVOYW1lID0gbnVsbDtcbiAgICB0aGlzLmlzRG9uZSA9IGZhbHNlO1xuICAgIC8vIGNoZWNrIGlmIHRoZSBmaWxlIGlucHV0IGlzIHJlbmRlcmVkIGJlZm9yZSBjbGVhcmluZyBpdFxuICAgIGlmICh0aGlzLmZpbGVJbnB1dCkge1xuICAgICAgdGhpcy5fcmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5maWxlSW5wdXQsICd2YWx1ZScsICcnKTtcbiAgICB9XG4gIH1cblxuICBkaXNhYmxlRmlsZVVwbG9hZEJ1dHRvbigpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuZGlzYWJsZUJ1dHRvbiA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICByZXR1cm4gdGhpcy5kaXNhYmxlQnV0dG9uO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5kaXNhYmxlQnV0dG9uID09PSAnZGlzYWJsZWQnIHx8IHRoaXMuZGlzYWJsZUJ1dHRvbiA9PT0gJ3RydWUnID8gdHJ1ZSA6IGZhbHNlO1xuICB9XG5cbn1cbiJdfQ==