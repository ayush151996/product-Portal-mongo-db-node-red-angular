import * as tslib_1 from "tslib";
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { HostListener } from '@angular/core';
// import { FileIOService } from '../services/filesystem.service';
import { NFileIOService } from '../services/n-fileIO.service';
import { NDirectiveOptions } from './directive.class';
var NVideoDirective = /** @class */ (function () {
    function NVideoDirective(fsv) {
        this.fsv = fsv;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    NVideoDirective.prototype.methodToHandleMouseClickAction = function () {
        var _this = this;
        this.getVideo()
            .then(function (sucess) { return _this.onsuccess.emit(sucess); })
            .catch(function (error) { return _this.onerror.emit(error); });
    };
    NVideoDirective.prototype.getVideo = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.fsv.getVideo(_this.videoOptions).then(function (res) {
                var options = {
                    'formData': res,
                    'entityName': _this.videoOptions.entityName,
                    'metadata': _this.videoOptions.metadata
                };
                _this.fsv.upload(options)
                    .then(function (uri) { return resolve(uri); })
                    .catch(function (err) { return reject(err); });
            }).catch(function (err) { return reject(err); });
        });
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", NDirectiveOptions)
    ], NVideoDirective.prototype, "videoOptions", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], NVideoDirective.prototype, "onsuccess", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], NVideoDirective.prototype, "onerror", void 0);
    tslib_1.__decorate([
        HostListener('click'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], NVideoDirective.prototype, "methodToHandleMouseClickAction", null);
    NVideoDirective = tslib_1.__decorate([
        Directive({
            selector: '[n-video]'
        }),
        tslib_1.__metadata("design:paramtypes", [NFileIOService])
    ], NVideoDirective);
    return NVideoDirective;
}());
export { NVideoDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi12aWRlby5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZXV0cmlub3MtbW9kdWxlLyIsInNvdXJjZXMiOlsic3JjL2FwcC9uZXV0cmlub3MtbW9kdWxlL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi12aWRlby5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3QyxrRUFBa0U7QUFDbEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzlELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBUXREO0lBS0UseUJBQW9CLEdBQW1CO1FBQW5CLFFBQUcsR0FBSCxHQUFHLENBQWdCO1FBSDdCLGNBQVMsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNsRCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFFZixDQUFDO0lBRXJCLHdEQUE4QixHQUE5QjtRQUF2QixpQkFJQztRQUhDLElBQUksQ0FBQyxRQUFRLEVBQUU7YUFDWixJQUFJLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBM0IsQ0FBMkIsQ0FBQzthQUMzQyxLQUFLLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBeEIsQ0FBd0IsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxrQ0FBUSxHQUFSO1FBQUEsaUJBYUM7UUFaQyxPQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDakMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLEdBQUc7Z0JBQzNDLElBQU0sT0FBTyxHQUFHO29CQUNkLFVBQVUsRUFBRSxHQUFHO29CQUNmLFlBQVksRUFBRSxLQUFJLENBQUMsWUFBWSxDQUFDLFVBQVU7b0JBQzFDLFVBQVUsRUFBRSxLQUFJLENBQUMsWUFBWSxDQUFDLFFBQVE7aUJBQ3ZDLENBQUM7Z0JBQ0YsS0FBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO3FCQUNyQixJQUFJLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQVosQ0FBWSxDQUFDO3FCQUN6QixLQUFLLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQVgsQ0FBVyxDQUFDLENBQUM7WUFDL0IsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFYLENBQVcsQ0FBQyxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQXpCUTtRQUFSLEtBQUssRUFBRTswQ0FBZSxpQkFBaUI7eURBQUM7SUFDL0I7UUFBVCxNQUFNLEVBQUU7MENBQVksWUFBWTtzREFBMkI7SUFDbEQ7UUFBVCxNQUFNLEVBQUU7MENBQVUsWUFBWTtvREFBMkI7SUFJbkM7UUFBdEIsWUFBWSxDQUFDLE9BQU8sQ0FBQzs7Ozt5RUFJckI7SUFYVSxlQUFlO1FBSDNCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxXQUFXO1NBQ3RCLENBQUM7aURBTXlCLGNBQWM7T0FMNUIsZUFBZSxDQTJCM0I7SUFBRCxzQkFBQztDQUFBLEFBM0JELElBMkJDO1NBM0JZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vLyBpbXBvcnQgeyBGaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvZmlsZXN5c3RlbS5zZXJ2aWNlJztcbmltcG9ydCB7IE5GaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvbi1maWxlSU8uc2VydmljZSc7XG5pbXBvcnQgeyBORGlyZWN0aXZlT3B0aW9ucyB9IGZyb20gJy4vZGlyZWN0aXZlLmNsYXNzJztcblxuXG5kZWNsYXJlIGNvbnN0IG5hdmlnYXRvcjogYW55O1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbi12aWRlb10nXG59KVxuZXhwb3J0IGNsYXNzIE5WaWRlb0RpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpIHZpZGVvT3B0aW9uczogTkRpcmVjdGl2ZU9wdGlvbnM7XG4gIEBPdXRwdXQoKSBvbnN1Y2Nlc3M6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgb25lcnJvcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBmc3Y6IE5GaWxlSU9TZXJ2aWNlKSB7IH1cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpIG1ldGhvZFRvSGFuZGxlTW91c2VDbGlja0FjdGlvbigpIHtcbiAgICB0aGlzLmdldFZpZGVvKClcbiAgICAgIC50aGVuKHN1Y2VzcyA9PiB0aGlzLm9uc3VjY2Vzcy5lbWl0KHN1Y2VzcykpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5vbmVycm9yLmVtaXQoZXJyb3IpKTtcbiAgfVxuXG4gIGdldFZpZGVvKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuZnN2LmdldFZpZGVvKHRoaXMudmlkZW9PcHRpb25zKS50aGVuKHJlcyA9PiB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgJ2Zvcm1EYXRhJzogcmVzLFxuICAgICAgICAgICdlbnRpdHlOYW1lJzogdGhpcy52aWRlb09wdGlvbnMuZW50aXR5TmFtZSxcbiAgICAgICAgICAnbWV0YWRhdGEnOiB0aGlzLnZpZGVvT3B0aW9ucy5tZXRhZGF0YVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmZzdi51cGxvYWQob3B0aW9ucylcbiAgICAgICAgICAudGhlbih1cmkgPT4gcmVzb2x2ZSh1cmkpKVxuICAgICAgICAgIC5jYXRjaChlcnIgPT4gcmVqZWN0KGVycikpO1xuICAgICAgfSkuY2F0Y2goZXJyID0+IHJlamVjdChlcnIpKTtcbiAgICB9KTtcbiAgfVxufVxuIl19