import * as tslib_1 from "tslib";
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { HostListener } from '@angular/core';
// import { FileIOService } from '../services/filesystem.service';
import { NFileIOService } from '../services/n-fileIO.service';
import { NDirectiveOptions } from './directive.class';
var NScanDirective = /** @class */ (function () {
    function NScanDirective(fsv) {
        this.fsv = fsv;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    NScanDirective.prototype.methodToHandleMouseClickAction = function () {
        var _this = this;
        this.getPicture()
            .then(function (sucess) { return _this.onsuccess.emit(sucess); })
            .catch(function (error) { return _this.onerror.emit(error); });
    };
    NScanDirective.prototype.getPicture = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.fsv.scanPicture(_this.scanOptions).then(function (res) {
                if (_this.scanOptions.doUpload) {
                    var options = {
                        'formData': res,
                        'entityName': _this.scanOptions.entityName,
                        'metadata': _this.scanOptions.metadata
                    };
                    _this.fsv.upload(options).then(function (uri) {
                        resolve(uri);
                    }).catch(function (err) { return reject(err); });
                }
                else {
                    resolve(res);
                }
            }).catch(function (err) {
                return reject(err);
            });
        });
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", NDirectiveOptions)
    ], NScanDirective.prototype, "scanOptions", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], NScanDirective.prototype, "onsuccess", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], NScanDirective.prototype, "onerror", void 0);
    tslib_1.__decorate([
        HostListener('click'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], NScanDirective.prototype, "methodToHandleMouseClickAction", null);
    NScanDirective = tslib_1.__decorate([
        Directive({
            selector: '[n-scan]'
        }),
        tslib_1.__metadata("design:paramtypes", [NFileIOService])
    ], NScanDirective);
    return NScanDirective;
}());
export { NScanDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zY2FubmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ldXRyaW5vcy1tb2R1bGUvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1tb2R1bGUvbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLXNjYW5uZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0Msa0VBQWtFO0FBQ2xFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUt0RDtJQUtFLHdCQUFvQixHQUFtQjtRQUFuQixRQUFHLEdBQUgsR0FBRyxDQUFnQjtRQUg3QixjQUFTLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbEQsWUFBTyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWYsQ0FBQztJQUVyQix1REFBOEIsR0FBOUI7UUFBdkIsaUJBSUM7UUFIQyxJQUFJLENBQUMsVUFBVSxFQUFFO2FBQ2QsSUFBSSxDQUFDLFVBQUMsTUFBTSxJQUFLLE9BQUEsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQTNCLENBQTJCLENBQUM7YUFDN0MsS0FBSyxDQUFDLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQXhCLENBQXdCLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsbUNBQVUsR0FBVjtRQUFBLGlCQXNCQztRQXJCQyxPQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDakMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLEdBQUc7Z0JBRTdDLElBQUksS0FBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUU7b0JBQzdCLElBQU0sT0FBTyxHQUFHO3dCQUNkLFVBQVUsRUFBRSxHQUFHO3dCQUNmLFlBQVksRUFBRSxLQUFJLENBQUMsV0FBVyxDQUFDLFVBQVU7d0JBQ3pDLFVBQVUsRUFBRSxLQUFJLENBQUMsV0FBVyxDQUFDLFFBQVE7cUJBQ3RDLENBQUM7b0JBQ0YsS0FBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsR0FBRzt3QkFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUNmLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBWCxDQUFXLENBQUMsQ0FBQztpQkFDOUI7cUJBRUQ7b0JBQ0UsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUNkO1lBQ0gsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUMsR0FBRztnQkFDWCxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQWxDUTtRQUFSLEtBQUssRUFBRTswQ0FBYyxpQkFBaUI7dURBQUM7SUFDOUI7UUFBVCxNQUFNLEVBQUU7MENBQVksWUFBWTtxREFBMkI7SUFDbEQ7UUFBVCxNQUFNLEVBQUU7MENBQVUsWUFBWTttREFBMkI7SUFJbkM7UUFBdEIsWUFBWSxDQUFDLE9BQU8sQ0FBQzs7Ozt3RUFJckI7SUFYVSxjQUFjO1FBSDFCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxVQUFVO1NBQ3JCLENBQUM7aURBTXlCLGNBQWM7T0FMNUIsY0FBYyxDQW9DMUI7SUFBRCxxQkFBQztDQUFBLEFBcENELElBb0NDO1NBcENZLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vLyBpbXBvcnQgeyBGaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvZmlsZXN5c3RlbS5zZXJ2aWNlJztcbmltcG9ydCB7IE5GaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvbi1maWxlSU8uc2VydmljZSc7XG5pbXBvcnQgeyBORGlyZWN0aXZlT3B0aW9ucyB9IGZyb20gJy4vZGlyZWN0aXZlLmNsYXNzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW24tc2Nhbl0nXG59KVxuZXhwb3J0IGNsYXNzIE5TY2FuRGlyZWN0aXZlIHtcbiAgQElucHV0KCkgc2Nhbk9wdGlvbnM6IE5EaXJlY3RpdmVPcHRpb25zO1xuICBAT3V0cHV0KCkgb25zdWNjZXNzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIG9uZXJyb3I6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZnN2OiBORmlsZUlPU2VydmljZSkgeyB9XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snKSBtZXRob2RUb0hhbmRsZU1vdXNlQ2xpY2tBY3Rpb24oKSB7XG4gICAgdGhpcy5nZXRQaWN0dXJlKClcbiAgICAgIC50aGVuKChzdWNlc3MpID0+IHRoaXMub25zdWNjZXNzLmVtaXQoc3VjZXNzKSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHRoaXMub25lcnJvci5lbWl0KGVycm9yKSk7XG4gIH1cblxuICBnZXRQaWN0dXJlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuZnN2LnNjYW5QaWN0dXJlKHRoaXMuc2Nhbk9wdGlvbnMpLnRoZW4ocmVzID0+IHtcblxuICAgICAgICBpZiAodGhpcy5zY2FuT3B0aW9ucy5kb1VwbG9hZCkge1xuICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAnZm9ybURhdGEnOiByZXMsXG4gICAgICAgICAgICAnZW50aXR5TmFtZSc6IHRoaXMuc2Nhbk9wdGlvbnMuZW50aXR5TmFtZSxcbiAgICAgICAgICAgICdtZXRhZGF0YSc6IHRoaXMuc2Nhbk9wdGlvbnMubWV0YWRhdGFcbiAgICAgICAgICB9O1xuICAgICAgICAgIHRoaXMuZnN2LnVwbG9hZChvcHRpb25zKS50aGVuKHVyaSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKHVyaSk7XG4gICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHJlamVjdChlcnIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICByZXNvbHZlKHJlcyk7XG4gICAgICAgIH1cbiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==