import * as tslib_1 from "tslib";
import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';
// import { FileIOService } from '../services/filesystem.service';
import { NFileIOService } from '../services/n-fileIO.service';
import { NDirectiveOptions } from './directive.class';
let NDownloadDirective = class NDownloadDirective {
    constructor(fsv) {
        this.fsv = fsv;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    methodToHandleMouseClickAction() {
        this.downloadFile()
            .then(res => this.onsuccess.emit(res))
            .catch(err => this.onerror.emit(err));
    }
    downloadFile() {
        return this.fsv.download(this.downloadOptions);
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", NDirectiveOptions)
], NDownloadDirective.prototype, "downloadOptions", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], NDownloadDirective.prototype, "onsuccess", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], NDownloadDirective.prototype, "onerror", void 0);
tslib_1.__decorate([
    HostListener('click'),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], NDownloadDirective.prototype, "methodToHandleMouseClickAction", null);
NDownloadDirective = tslib_1.__decorate([
    Directive({ selector: '[n-download]' }),
    tslib_1.__metadata("design:paramtypes", [NFileIOService])
], NDownloadDirective);
export { NDownloadDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1kb3dubG9hZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZXV0cmlub3MtbW9kdWxlLyIsInNvdXJjZXMiOlsic3JjL2FwcC9uZXV0cmlub3MtbW9kdWxlL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi1kb3dubG9hZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJGLGtFQUFrRTtBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFJdEQsSUFBYSxrQkFBa0IsR0FBL0IsTUFBYSxrQkFBa0I7SUFLN0IsWUFBb0IsR0FBbUI7UUFBbkIsUUFBRyxHQUFILEdBQUcsQ0FBZ0I7UUFIN0IsY0FBUyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xELFlBQU8sR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUVmLENBQUM7SUFFckIsOEJBQThCO1FBQ25ELElBQUksQ0FBQyxZQUFZLEVBQUU7YUFDaEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDckMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsWUFBWTtRQUNWLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ2pELENBQUM7Q0FDRixDQUFBO0FBZlU7SUFBUixLQUFLLEVBQUU7c0NBQWtCLGlCQUFpQjsyREFBQztBQUNsQztJQUFULE1BQU0sRUFBRTtzQ0FBWSxZQUFZO3FEQUEyQjtBQUNsRDtJQUFULE1BQU0sRUFBRTtzQ0FBVSxZQUFZO21EQUEyQjtBQUluQztJQUF0QixZQUFZLENBQUMsT0FBTyxDQUFDOzs7O3dFQUlyQjtBQVhVLGtCQUFrQjtJQUQ5QixTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLENBQUM7NkNBTWIsY0FBYztHQUw1QixrQkFBa0IsQ0FnQjlCO1NBaEJZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBIZWFkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuLy8gaW1wb3J0IHsgRmlsZUlPU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2ZpbGVzeXN0ZW0uc2VydmljZSc7XG5pbXBvcnQgeyBORmlsZUlPU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL24tZmlsZUlPLnNlcnZpY2UnO1xuaW1wb3J0IHsgTkRpcmVjdGl2ZU9wdGlvbnMgfSBmcm9tICcuL2RpcmVjdGl2ZS5jbGFzcyc7XG5cblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW24tZG93bmxvYWRdJyB9KVxuZXhwb3J0IGNsYXNzIE5Eb3dubG9hZERpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpIGRvd25sb2FkT3B0aW9uczogTkRpcmVjdGl2ZU9wdGlvbnM7XG4gIEBPdXRwdXQoKSBvbnN1Y2Nlc3M6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgb25lcnJvcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBmc3Y6IE5GaWxlSU9TZXJ2aWNlKSB7IH1cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpIG1ldGhvZFRvSGFuZGxlTW91c2VDbGlja0FjdGlvbigpIHtcbiAgICB0aGlzLmRvd25sb2FkRmlsZSgpXG4gICAgICAudGhlbihyZXMgPT4gdGhpcy5vbnN1Y2Nlc3MuZW1pdChyZXMpKVxuICAgICAgLmNhdGNoKGVyciA9PiB0aGlzLm9uZXJyb3IuZW1pdChlcnIpKTtcbiAgfVxuXG4gIGRvd25sb2FkRmlsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5mc3YuZG93bmxvYWQodGhpcy5kb3dubG9hZE9wdGlvbnMpO1xuICB9XG59XG4iXX0=